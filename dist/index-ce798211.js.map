{"version":3,"file":"index-ce798211.js","sources":["../src/ui/Word/index.tsx"],"sourcesContent":["import React from 'react';\nimport SendBird from 'sendbird';\nimport './index.scss';\n\nimport { LabelTypography, LabelColors } from '../Label';\nimport LinkLabel from '../LinkLabel';\nimport uuidv4 from '../../utils/uuid';\nimport { convertWordToStringObj, StringObjType, StringObj } from '../../utils';\nimport MentionLabel from '../MentionLabel';\n\ninterface WordProps {\n  word: string;\n  message: SendBird.UserMessage;\n  isByMe?: boolean;\n  mentionTemplate?: string;\n  renderString?: (stringObj: StringObj) => JSX.Element;\n}\n\n// Word and StringObj will include types: normal, mention, url\nexport default function Word(props: WordProps): JSX.Element {\n  const {\n    word,\n    message,\n    isByMe = false,\n    mentionTemplate = '@',\n    renderString = null,\n  } = props;\n  return (\n    <span className=\"sendbird-word\">\n      {\n        convertWordToStringObj(word, message?.mentionedUsers).map((stringObj) => {\n          const { type, value } = stringObj;\n          if (renderString && typeof renderString === 'function') {\n            return renderString(stringObj);\n          }\n          if (type === StringObjType.mention) {\n            return (\n              <MentionLabel\n                mentionTemplate={mentionTemplate}\n                mentionedUserId={value}\n                key={uuidv4()}\n                isByMe={isByMe}\n              />\n            );\n          } else if (type === StringObjType.url) {\n            return (\n              <LinkLabel\n                className=\"sendbird-word__url\"\n                key={uuidv4()}\n                src={word}\n                type={LabelTypography.BODY_1}\n                color={isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1}\n              >\n                {value}\n              </LinkLabel>\n            );\n          } else {\n            return value\n          }\n        })\n      }\n    </span>\n  );\n}\n"],"names":["Word","props","word","message","_a","isByMe","_b","mentionTemplate","_c","renderString","React","convertWordToStringObj","mentionedUsers","map","stringObj","type","value","StringObjType","mention","uuidv4","url","LabelTypography","BODY_1","LabelColors","ONCONTENT_1","ONBACKGROUND_1"],"mappings":";;;;;;;SAmBwBA,KAAKC;AAEzB,MAAAC,IAAI,GAKFD,KAAK,KALP;AAAA,MACAE,OAAO,GAILF,KAAK,QALP;AAAA,MAEAG,KAGEH,KAAK,OALP;AAAA,MAEAI,MAAM,mBAAG,UAFT;AAAA,MAGAC,KAEEL,KAAK,gBALP;AAAA,MAGAM,eAAe,mBAAG,QAHlB;AAAA,MAIAC,KACEP,KAAK,aALP;AAAA,MAIAQ,YAAY,mBAAG,SAJf;AAMF,sBACEC;AAAM,IAAA,SAAS,EAAC;AAAhB,KAEIC,sBAAsB,CAACT,IAAD,EAAOC,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAES,cAAhB,CAAtB,CAAsDC,GAAtD,CAA0D,UAACC,SAAD;AAChD,QAAAC,IAAI,GAAYD,SAAS,KAAzB;AAAA,QAAME,KAAK,GAAKF,SAAS,MAAzB;;AACR,QAAIL,YAAY,IAAI,OAAOA,YAAP,KAAwB,UAA5C,EAAwD;AACtD,aAAOA,YAAY,CAACK,SAAD,CAAnB;AACD;;AACD,QAAIC,IAAI,KAAKE,aAAa,CAACC,OAA3B,EAAoC;AAClC,0BACER,6BAAC,YAAD;AACE,QAAA,eAAe,EAAEH,eADnB;AAEE,QAAA,eAAe,EAAES,KAFnB;AAGE,QAAA,GAAG,EAAEG,MAAM,EAHb;AAIE,QAAA,MAAM,EAAEd;AAJV,QADF;AAQD,KATD,MASO,IAAIU,IAAI,KAAKE,aAAa,CAACG,GAA3B,EAAgC;AACrC,0BACEV,6BAAC,SAAD;AACE,QAAA,SAAS,EAAC,oBADZ;AAEE,QAAA,GAAG,EAAES,MAAM,EAFb;AAGE,QAAA,GAAG,EAAEjB,IAHP;AAIE,QAAA,IAAI,EAAEmB,eAAe,CAACC,MAJxB;AAKE,QAAA,KAAK,EAAEjB,MAAM,GAAGkB,WAAW,CAACC,WAAf,GAA6BD,WAAW,CAACE;AALxD,SAOGT,KAPH,CADF;AAWD,KAZM,MAYA;AACL,aAAOA,KAAP;AACD;AACF,GA7BD,CAFJ,CADF;AAoCD;;;;"}