{"version":3,"file":"sendBirdSelectors.js","sources":["../../src/lib/selectors.js"],"sourcesContent":["import * as topics from './pubSub/topics';\n\nexport const getSdk = (store) => {\n  const { stores = {} } = store;\n  const { sdkStore = {} } = stores;\n  const { sdk } = sdkStore;\n  return sdk;\n};\n\nexport const getPubSub = (store) => {\n  const { config = {} } = store;\n  const { pubSub } = config;\n  return pubSub;\n};\n\n// SendBird disconnect. Invalidates currentUser\n// eslint-disable-next-line max-len\nexport const getConnect = (store) => (userId, accessToken) => new Promise((resolve, reject) => {\n  const sdk = getSdk(store);\n  if (!sdk) {\n    reject(new Error('Sdk not found'));\n  }\n  if (!accessToken) {\n    sdk.connect(userId)\n      .then((res) => resolve(res))\n      .catch((err) => reject(err));\n  } else {\n    sdk.connect(userId, accessToken)\n      .then((res) => resolve(res))\n      .catch((err) => reject(err));\n  }\n});\n\n// SendBird disconnect. Invalidates currentUser\nexport const getDisconnect = (store) => () => new Promise((resolve, reject) => {\n  const sdk = getSdk(store);\n  if (!sdk) {\n    reject(new Error('Sdk not found'));\n  }\n  sdk.disconnect()\n    .then((res) => resolve(res))\n    .catch((err) => reject(err));\n});\n\n// Using the updateCurrentUserInfo() method\n// you can update a user's nickname and profile image with a URL\n// eslint-disable-next-line max-len\nexport const getUpdateUserInfo = (store) => (nickName, profileUrl) => new Promise((resolve, reject) => {\n  const sdk = getSdk(store);\n  if (!sdk) {\n    reject(new Error('Sdk not found'));\n  }\n  sdk.updateCurrentUserInfo(nickName, profileUrl)\n    .then((res) => resolve(res))\n    .catch((err) => reject(err));\n});\n\nexport const getSendUserMessage = (store) => (channelUrl, userMessageParams) => {\n  const sdk = getSdk(store);\n  const pubsub = getPubSub(store);\n  return new Promise((resolve, reject) => {\n    if (!sdk) {\n      reject(new Error('Sdk not found'));\n    }\n    sdk.GroupChannel.getChannel(channelUrl)\n      .then((channel) => {\n        const promisify = () => {\n          let pendingMsg = null;\n          const pendingPromise = new Promise((resolve_, reject_) => {\n            pendingMsg = channel.sendUserMessage(userMessageParams, (res, err) => {\n              const swapParams = sdk.getErrorFirstCallback();\n              let message = res;\n              let error = err;\n              if (swapParams) {\n                message = err;\n                error = res;\n              }\n              if (error) {\n                reject_(error);\n                return;\n              }\n              resolve_(message);\n              pubsub.publish(\n                topics.SEND_USER_MESSAGE,\n                {\n                  message,\n                  channel,\n                },\n              );\n            });\n            pubsub.publish(\n              topics.SEND_MESSAGE_START,\n              {\n                message: pendingMsg,\n                channel,\n              },\n            );\n          });\n          pendingPromise.get = () => pendingMsg;\n          return pendingPromise;\n        };\n        resolve(promisify());\n      })\n      .catch(reject);\n  });\n};\nexport const getSendFileMessage = (store) => (channelUrl, fileMessageParams) => {\n  const sdk = getSdk(store);\n  const pubsub = getPubSub(store);\n  return new Promise((resolve, reject) => {\n    if (!sdk) {\n      reject(new Error('Sdk not found'));\n    }\n    sdk.GroupChannel.getChannel(channelUrl)\n      .then((channel) => {\n        const promisify = () => {\n          let pendingMsg = null;\n          const pendingPromise = new Promise((resolve_, reject_) => {\n            pendingMsg = channel.sendFileMessage(fileMessageParams, (res, err) => {\n              const swapParams = sdk.getErrorFirstCallback();\n              let message = res;\n              let error = err;\n              if (swapParams) {\n                message = err;\n                error = res;\n              }\n\n              if (error) {\n                reject_(error);\n                return;\n              }\n              resolve_(message);\n              pubsub.publish(\n                topics.SEND_FILE_MESSAGE,\n                {\n                  message,\n                  channel,\n                },\n              );\n            });\n          });\n          if (fileMessageParams.file) {\n            // keep the file's local version in pendingMsg.localUrl\n            // because promise doesnt allow overriding of pendingMsg.url\n            // eslint-disable-next-line no-param-reassign\n            pendingMsg.localUrl = URL.createObjectURL(fileMessageParams.file);\n          }\n          if (fileMessageParams.fileUrl) {\n            // eslint-disable-next-line no-param-reassign\n            pendingMsg.localUrl = fileMessageParams.fileUrl;\n          }\n          // eslint-disable-next-line no-param-reassign\n          pendingMsg.requestState = 'pending';\n          pubsub.publish(\n            topics.SEND_MESSAGE_START,\n            {\n              message: pendingMsg,\n              channel,\n            },\n          );\n          pendingPromise.get = () => pendingMsg;\n          return pendingPromise;\n        };\n        resolve(promisify());\n      })\n      .catch(reject);\n  });\n};\nexport const getUpdateUserMessage = (store) => (channelUrl, messageId, params) => {\n  const sdk = getSdk(store);\n  const pubsub = getPubSub(store);\n  return new Promise((resolve, reject) => {\n    if (!sdk) {\n      reject(new Error('Sdk not found'));\n    }\n    sdk.GroupChannel.getChannel(channelUrl)\n      .then((channel) => {\n        channel.updateUserMessage(messageId, params, (res, err) => {\n          const swapParams = sdk.getErrorFirstCallback();\n          let message = res;\n          let error = err;\n          if (swapParams) {\n            message = err;\n            error = res;\n          }\n\n          if (error) {\n            reject(error);\n            return;\n          }\n          resolve(message);\n          pubsub.publish(\n            topics.UPDATE_USER_MESSAGE,\n            {\n              message,\n              channel,\n              // workaround for updating channelPreview on message-edit\n              // https://sendbird.atlassian.net/browse/UIKIT-268\n              fromSelector: true,\n            },\n          );\n        });\n      })\n      .catch(reject);\n  });\n};\nexport const getDeleteMessage = (store) => (channelUrl, message) => {\n  const sdk = getSdk(store);\n  const pubsub = getPubSub(store);\n  return new Promise((resolve, reject) => {\n    if (!sdk) {\n      reject(new Error('Sdk not found'));\n    }\n    sdk.GroupChannel.getChannel(channelUrl)\n      .then((channel) => {\n        const { messageId } = message;\n        channel.deleteMessage(message, (res, err) => {\n          const swapParams = sdk.getErrorFirstCallback();\n          let error = err;\n          if (swapParams) {\n            error = res;\n          }\n\n          if (error) {\n            reject(error);\n            return;\n          }\n          resolve(message);\n          pubsub.publish(\n            topics.DELETE_MESSAGE,\n            {\n              messageId,\n              channel,\n            },\n          );\n        });\n      })\n      .catch(reject);\n  });\n};\n\nexport const getResendUserMessage = (store) => (channelUrl, failedMessage) => {\n  const sdk = getSdk(store);\n  const pubsub = getPubSub(store);\n  return new Promise((resolve, reject) => {\n    if (!sdk) {\n      reject(new Error('Sdk not found'));\n    }\n    sdk.GroupChannel.getChannel(channelUrl)\n      .then((channel) => {\n        channel.resendUserMessage(failedMessage)\n          .then((message) => {\n            resolve(message);\n            pubsub.publish(\n              topics.SEND_USER_MESSAGE,\n              {\n                message,\n                channel,\n              },\n            );\n          })\n          .catch(reject);\n      })\n      .catch(reject);\n  });\n};\n\nexport const getResendFileMessage = (store) => (channelUrl, failedMessage) => {\n  const sdk = getSdk(store);\n  const pubsub = getPubSub(store);\n  return new Promise((resolve, reject) => {\n    if (!sdk) {\n      reject(new Error('Sdk not found'));\n    }\n    sdk.GroupChannel.getChannel(channelUrl)\n      .then((channel) => {\n        channel.resendFileMessage(failedMessage)\n          .then((message) => {\n            resolve(message);\n            pubsub.publish(\n              topics.SEND_FILE_MESSAGE,\n              {\n                message,\n                channel,\n              },\n            );\n          })\n          .catch(reject);\n      })\n      .catch(reject);\n  });\n};\n\nexport const getCreateChannel = (store) => (params) => {\n  const sdk = getSdk(store);\n  const pubsub = getPubSub(store);\n  return new Promise((resolve, reject) => {\n    if (!sdk) {\n      reject(new Error('Sdk not found'));\n    }\n    sdk.GroupChannel.createChannel(params)\n      .then((channel) => {\n        resolve(channel);\n        pubsub.publish(\n          topics.CREATE_CHANNEL,\n          {\n            channel,\n          },\n        );\n      })\n      .catch(reject);\n  });\n};\n\nexport const getLeaveChannel = (store) => (channelUrl) => {\n  const sdk = getSdk(store);\n  const pubsub = getPubSub(store);\n  return new Promise((resolve, reject) => {\n    if (!sdk) {\n      reject(new Error('Sdk not found'));\n    }\n    sdk.GroupChannel.getChannel(channelUrl)\n      .then((channel) => {\n        channel.leave()\n          .then(() => {\n            resolve(channel);\n            pubsub.publish(\n              topics.LEAVE_CHANNEL,\n              {\n                channel,\n              },\n            );\n          })\n          .catch(reject);\n      })\n      .catch(reject);\n  });\n};\n\nexport const getFreezeChannel = (store) => (channelUrl) => {\n  const sdk = getSdk(store);\n  return new Promise((resolve, reject) => {\n    if (!sdk) {\n      reject(new Error('Sdk not found'));\n    }\n    sdk.GroupChannel.getChannel(channelUrl)\n      .then((channel) => {\n        channel.freeze()\n          .then(() => {\n            // do not need pubsub here - event listener works\n            resolve(channel);\n          })\n          .catch(reject);\n      })\n      .catch(reject);\n  });\n};\n\nexport const getUnFreezeChannel = (store) => (channelUrl) => {\n  const sdk = getSdk(store);\n  return new Promise((resolve, reject) => {\n    if (!sdk) {\n      reject(new Error('Sdk not found'));\n    }\n    sdk.GroupChannel.getChannel(channelUrl)\n      .then((channel) => {\n        channel.unfreeze()\n          .then(() => {\n            // do not need pubsub here - event listener works\n            resolve(channel);\n          })\n          .catch(reject);\n      })\n      .catch(reject);\n  });\n};\n\nexport const getCreateOpenChannel = (store) => (params) => {\n  const sdk = getSdk(store);\n  return new Promise((resolve, reject) => {\n    if (!sdk) {\n      reject(new Error('Sdk not found'));\n    }\n    sdk.OpenChannel.createChannel(params)\n      .then((channel) => {\n        resolve(channel);\n      })\n      .catch(reject);\n  });\n};\nexport const enterOpenChannel = (store) => (channelUrl) => {\n  const sdk = getSdk(store);\n  return new Promise((resolve, reject) => {\n    if (!sdk) {\n      reject(new Error('Sdk not found'));\n    }\n    sdk.OpenChannel.getChannel(channelUrl, (openChannel, error) => {\n      if (error) {\n        reject(new Error(error));\n        return;\n      }\n\n      openChannel.enter((response, enterError) => {\n        if (error) {\n          reject(new Error(enterError));\n          return;\n        }\n        resolve(response);\n      });\n    });\n  });\n};\n\nexport const exitOpenChannel = (store) => (channelUrl) => {\n  const sdk = getSdk(store);\n  return new Promise((resolve, reject) => {\n    if (!sdk) {\n      reject(new Error('Sdk not found'));\n    }\n    sdk.OpenChannel.getChannel(channelUrl, (openChannel, error) => {\n      if (error) {\n        reject(new Error(error));\n        return;\n      }\n\n      openChannel.exit((response, exitError) => {\n        if (error) {\n          reject(new Error(exitError));\n          return;\n        }\n        resolve(response);\n      });\n    });\n  });\n};\n\nexport const getOpenChannelSendUserMessage = (store) => (channelUrl, userMessageParams) => {\n  const sdk = getSdk(store);\n  const pubsub = getPubSub(store);\n  return new Promise((resolve, reject) => {\n    if (!sdk) {\n      reject(new Error('Sdk not found'));\n    }\n    sdk.OpenChannel.getChannel(channelUrl)\n      .then((channel) => {\n        const promisify = () => {\n          let pendingMsg = null;\n          const pendingPromise = new Promise((resolve_, reject_) => {\n            pendingMsg = channel.sendUserMessage(userMessageParams, (res, err) => {\n              const swapParams = sdk.getErrorFirstCallback();\n              let message = res;\n              let error = err;\n              if (swapParams) {\n                message = err;\n                error = res;\n              }\n              if (error) {\n                reject_(error);\n                return;\n              }\n              resolve_(message);\n              pubsub.publish(\n                topics.SEND_USER_MESSAGE,\n                {\n                  message,\n                  channel,\n                },\n              );\n            });\n            pubsub.publish(\n              topics.SEND_MESSAGE_START,\n              {\n                message: pendingMsg,\n                channel,\n              },\n            );\n          });\n          pendingPromise.get = () => pendingMsg;\n          return pendingPromise;\n        };\n        resolve(promisify());\n      })\n      .catch(reject);\n  });\n};\n\nexport const getOpenChannelSendFileMessage = (store) => (channelUrl, fileMessageParams) => {\n  const sdk = getSdk(store);\n  const pubsub = getPubSub(store);\n  return new Promise((resolve, reject) => {\n    if (!sdk) {\n      reject(new Error('Sdk not found'));\n    }\n    sdk.OpenChannel.getChannel(channelUrl)\n      .then((channel) => {\n        const promisify = () => {\n          let pendingMsg = null;\n          const pendingPromise = new Promise((resolve_, reject_) => {\n            pendingMsg = channel.sendFileMessage(fileMessageParams, (res, err) => {\n              const swapParams = sdk.getErrorFirstCallback();\n              let message = res;\n              let error = err;\n              if (swapParams) {\n                message = err;\n                error = res;\n              }\n\n              if (error) {\n                reject_(error);\n                return;\n              }\n              resolve_(message);\n              pubsub.publish(\n                topics.SEND_FILE_MESSAGE,\n                {\n                  message,\n                  channel,\n                },\n              );\n            });\n          });\n          if (fileMessageParams.file) {\n            // keep the file's local version in pendingMsg.localUrl\n            // because promise doesnt allow overriding of pendingMsg.url\n            // eslint-disable-next-line no-param-reassign\n            pendingMsg.localUrl = URL.createObjectURL(fileMessageParams.file);\n          }\n          if (fileMessageParams.fileUrl) {\n            // eslint-disable-next-line no-param-reassign\n            pendingMsg.localUrl = fileMessageParams.fileUrl;\n          }\n          // eslint-disable-next-line no-param-reassign\n          pendingMsg.requestState = 'pending';\n          pubsub.publish(\n            topics.SEND_MESSAGE_START,\n            {\n              message: pendingMsg,\n              channel,\n            },\n          );\n          pendingPromise.get = () => pendingMsg;\n          return pendingPromise;\n        };\n        resolve(promisify());\n      })\n      .catch(reject);\n  });\n};\n\nexport const getOpenChannelUpdateUserMessage = (store) => (channelUrl, messageId, params) => {\n  const sdk = getSdk(store);\n  const pubsub = getPubSub(store);\n  return new Promise((resolve, reject) => {\n    if (!sdk) {\n      reject(new Error('Sdk not found'));\n    }\n    sdk.OpenChannel.getChannel(channelUrl)\n      .then((channel) => {\n        channel.updateUserMessage(messageId, params, (res, err) => {\n          const swapParams = sdk.getErrorFirstCallback();\n          let message = res;\n          let error = err;\n          if (swapParams) {\n            message = err;\n            error = res;\n          }\n\n          if (error) {\n            reject(error);\n            return;\n          }\n          resolve(message);\n          pubsub.publish(\n            topics.UPDATE_USER_MESSAGE,\n            {\n              message,\n              channel,\n              // workaround for updating channelPreview on message-edit\n              // https://sendbird.atlassian.net/browse/UIKIT-268\n              fromSelector: true,\n            },\n          );\n        });\n      })\n      .catch(reject);\n  });\n};\n\nexport const getOpenChannelDeleteMessage = (store) => (channelUrl, message) => {\n  const sdk = getSdk(store);\n  const pubsub = getPubSub(store);\n  return new Promise((resolve, reject) => {\n    if (!sdk) {\n      reject(new Error('Sdk not found'));\n    }\n    sdk.OpenChannel.getChannel(channelUrl)\n      .then((channel) => {\n        const { messageId } = message;\n        channel.deleteMessage(message, (res, err) => {\n          const swapParams = sdk.getErrorFirstCallback();\n          let error = err;\n          if (swapParams) {\n            error = res;\n          }\n\n          if (error) {\n            reject(error);\n            return;\n          }\n          resolve(message);\n          pubsub.publish(\n            topics.DELETE_MESSAGE,\n            {\n              messageId,\n              channel,\n            },\n          );\n        });\n      })\n      .catch(reject);\n  });\n};\n\nexport const getOpenChannelResendUserMessage = (store) => (channelUrl, failedMessage) => {\n  const sdk = getSdk(store);\n  const pubsub = getPubSub(store);\n  return new Promise((resolve, reject) => {\n    if (!sdk) {\n      reject(new Error('Sdk not found'));\n    }\n    sdk.OpenChannel.getChannel(channelUrl)\n      .then((channel) => {\n        channel.resendUserMessage(failedMessage)\n          .then((message) => {\n            resolve(message);\n            pubsub.publish(\n              topics.SEND_USER_MESSAGE,\n              {\n                message,\n                channel,\n              },\n            );\n          })\n          .catch(reject);\n      })\n      .catch(reject);\n  });\n};\n\nexport const getOpenChannelResendFileMessage = (store) => (channelUrl, failedMessage) => {\n  const sdk = getSdk(store);\n  const pubsub = getPubSub(store);\n  return new Promise((resolve, reject) => {\n    if (!sdk) {\n      reject(new Error('Sdk not found'));\n    }\n    sdk.OpenChannel.getChannel(channelUrl)\n      .then((channel) => {\n        channel.resendFileMessage(failedMessage)\n          .then((message) => {\n            resolve(message);\n            pubsub.publish(\n              topics.SEND_FILE_MESSAGE,\n              {\n                message,\n                channel,\n              },\n            );\n          })\n          .catch(reject);\n      })\n      .catch(reject);\n  });\n};\n\nexport default {\n  getSdk,\n  getConnect,\n  getDisconnect,\n  getUpdateUserInfo,\n  getSendUserMessage,\n  getSendFileMessage,\n  getUpdateUserMessage,\n  getDeleteMessage,\n  getResendUserMessage,\n  getResendFileMessage,\n  getFreezeChannel,\n  getUnFreezeChannel,\n  getCreateChannel,\n  getLeaveChannel,\n  getCreateOpenChannel,\n  getEnterOpenChannel: enterOpenChannel,\n  getExitOpenChannel: exitOpenChannel,\n  getOpenChannelSendUserMessage,\n  getOpenChannelSendFileMessage,\n  getOpenChannelUpdateUserMessage,\n  getOpenChannelDeleteMessage,\n  getOpenChannelResendUserMessage,\n  getOpenChannelResendFileMessage,\n};\n// TODO: Check naming\n"],"names":["getSdk","store","stores","sdkStore","sdk","getPubSub","config","pubSub","getConnect","userId","accessToken","Promise","resolve","reject","Error","connect","then","res","catch","err","getDisconnect","disconnect","getUpdateUserInfo","nickName","profileUrl","updateCurrentUserInfo","getSendUserMessage","channelUrl","userMessageParams","pubsub","GroupChannel","getChannel","channel","promisify","pendingMsg","pendingPromise","resolve_","reject_","sendUserMessage","swapParams","getErrorFirstCallback","message","error","publish","topics","get","getSendFileMessage","fileMessageParams","sendFileMessage","file","localUrl","URL","createObjectURL","fileUrl","requestState","getUpdateUserMessage","messageId","params","updateUserMessage","fromSelector","getDeleteMessage","deleteMessage","getResendUserMessage","failedMessage","resendUserMessage","getResendFileMessage","resendFileMessage","getCreateChannel","createChannel","getLeaveChannel","leave","getFreezeChannel","freeze","getUnFreezeChannel","unfreeze","getCreateOpenChannel","OpenChannel","enterOpenChannel","openChannel","enter","response","enterError","exitOpenChannel","exit","exitError","getOpenChannelSendUserMessage","getOpenChannelSendFileMessage","getOpenChannelUpdateUserMessage","getOpenChannelDeleteMessage","getOpenChannelResendUserMessage","getOpenChannelResendFileMessage","getEnterOpenChannel","getExitOpenChannel"],"mappings":"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"}