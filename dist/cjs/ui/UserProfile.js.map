{"version":3,"file":"UserProfile.js","sources":["../../../src/ui/UserProfile/index.tsx"],"sourcesContent":["import React, { ReactElement, useContext } from 'react';\nimport type SendBird from 'sendbird';\nimport './index.scss';\n\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport withSendbirdContext from '../../lib/SendbirdSdkContext';\nimport { getSdk, getCreateChannel } from '../../lib/selectors';\nimport Avatar from '../Avatar/index';\nimport Label, { LabelColors, LabelTypography } from '../Label';\nimport Button, { ButtonTypes } from '../Button';\n\ninterface Logger {\n  info?(message: string, channel: SendBird.GroupChannel): void;\n}\n\ninterface Props {\n  user: SendBird.User;\n  currentUserId?: string;\n  sdk?: SendBird.SendBirdInstance;\n  logger?: Logger;\n  disableMessaging?: boolean;\n  createChannel?(params: SendBird.GroupChannelParams): Promise<SendBird.GroupChannel>;\n  onSuccess?(): void;\n}\n\nfunction UserProfile({\n  user,\n  currentUserId,\n  sdk,\n  logger,\n  disableMessaging = false,\n  createChannel,\n  onSuccess,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird__user-profile\">\n      <section className=\"sendbird__user-profile-avatar\">\n        <Avatar\n          height=\"80px\"\n          width=\"80px\"\n          src={user?.profileUrl}\n        />\n      </section>\n      <section className=\"sendbird__user-profile-name\">\n        <Label\n          type={LabelTypography.H_2}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {user?.nickname || stringSet.NO_NAME}\n        </Label>\n      </section>\n      {\n        (user?.userId !== currentUserId) && !disableMessaging && (\n          <section className=\"sendbird__user-profile-message\">\n            <Button\n              type={ButtonTypes.SECONDARY}\n              onClick={() => {\n                const params = new sdk.GroupChannelParams();\n                params.isDistinct = true;\n                params.addUserIds([user?.userId]);\n                onSuccess();\n                createChannel(params)\n                  .then((groupChannel) => {\n                    logger.info('UserProfile, channel create', groupChannel);\n                  });\n              }}\n            >\n              {stringSet.USER_PROFILE__MESSAGE}\n            </Button>\n          </section>\n        )\n      }\n      <div className=\"sendbird__user-profile-separator\" />\n      <section className=\"sendbird__user-profile-userId\">\n        <Label\n          className=\"sendbird__user-profile-userId--label\"\n          type={LabelTypography.CAPTION_2}\n          color={LabelColors.ONBACKGROUND_2}\n        >\n          {stringSet.USER_PROFILE__USER_ID}\n        </Label>\n        <Label\n          className=\"sendbird__user-profile-userId--value\"\n          type={LabelTypography.BODY_1}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {user?.userId}\n        </Label>\n      </section>\n    </div>\n  );\n}\n\nconst mapStoreToProps = (store) => ({\n  sdk: getSdk(store),\n  createChannel: getCreateChannel(store),\n  logger: store.config.logger,\n  pubsub: store.config.pubSub,\n});\n\nconst ConnectedUserProfile = withSendbirdContext(UserProfile, mapStoreToProps);\n\nexport default ConnectedUserProfile;\n"],"names":["UserProfile","_a","user","currentUserId","sdk","logger","_b","disableMessaging","createChannel","onSuccess","stringSet","useContext","LocalizationContext","React","Avatar","profileUrl","Label","LabelTypography","H_2","LabelColors","ONBACKGROUND_1","nickname","NO_NAME","userId","Button","ButtonTypes","SECONDARY","params","GroupChannelParams","isDistinct","addUserIds","then","groupChannel","info","USER_PROFILE__MESSAGE","CAPTION_2","ONBACKGROUND_2","USER_PROFILE__USER_ID","BODY_1","mapStoreToProps","store","getSdk","getCreateChannel","config","pubsub","pubSub","ConnectedUserProfile","withSendbirdContext"],"mappings":"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"}