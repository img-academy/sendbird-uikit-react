{"version":3,"file":"MessageContent.js","sources":["../../../src/ui/MessageContent/index.tsx"],"sourcesContent":["import React, { ReactElement, useContext, useRef, useState } from 'react';\nimport { GroupChannel, UserMessage, FileMessage, EmojiContainer } from 'sendbird';\nimport format from 'date-fns/format';\nimport './index.scss';\n\nimport Avatar from '../Avatar';\nimport UserProfile from '../UserProfile';\nimport MessageStatus from '../MessageStatus';\nimport MessageItemMenu from '../MessageItemMenu';\nimport MessageItemReactionMenu from '../MessageItemReactionMenu';\nimport ContextMenu, { MenuItems } from '../ContextMenu';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport EmojiReactions from '../EmojiReactions';\n\nimport ClientAdminMessage from '../AdminMessage';\nimport TextMessageItemBody from '../TextMessageItemBody';\nimport FileMessageItemBody from '../FileMessageItemBody';\nimport ThumbnailMessageItemBody from '../ThumbnailMessageItemBody';\nimport OGMessageItemBody from '../OGMessageItemBody';\nimport UnknownMessageItemBody from '../UnknownMessageItemBody';\nimport QuoteMessage from '../QuoteMessage';\n\nimport {\n  getClassName,\n  getUIKitMessageTypes,\n  getUIKitMessageType,\n  isTextMessage,\n  isOGMessage,\n  isThumbnailMessage,\n  getSenderName,\n  CoreMessageType,\n} from '../../utils';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\nimport { ReplyType } from '../../index.js';\nimport { useLocalization } from '../../lib/LocalizationContext';\nimport useSendbirdStateContext from '../../hooks/useSendbirdStateContext';\n\ninterface Props {\n  className?: string | Array<string>;\n  userId: string;\n  channel: GroupChannel;\n  message: CoreMessageType;\n  disabled?: boolean;\n  chainTop?: boolean;\n  chainBottom?: boolean;\n  useReaction?: boolean;\n  replyType?: ReplyType;\n  nicknamesMap?: Map<string, string>;\n  emojiContainer?: EmojiContainer;\n  scrollToMessage?: (createdAt: number, messageId: number) => void;\n  showEdit?: (bool: boolean) => void;\n  showRemove?: (bool: boolean) => void;\n  showFileViewer?: (bool: boolean) => void;\n  resendMessage?: (message: UserMessage | FileMessage) => Promise<UserMessage | FileMessage>;\n  toggleReaction?: (message: UserMessage | FileMessage, reactionKey: string, isReacted: boolean) => void;\n  setQuoteMessage?: (message: UserMessage | FileMessage) => void;\n}\nexport default function MessageContent({\n  className,\n  userId,\n  channel,\n  message,\n  disabled = false,\n  chainTop = false,\n  chainBottom = false,\n  useReaction = false,\n  replyType,\n  nicknamesMap,\n  emojiContainer,\n  scrollToMessage,\n  showEdit,\n  showRemove,\n  showFileViewer,\n  resendMessage,\n  toggleReaction,\n  setQuoteMessage,\n}: Props): ReactElement {\n  const messageTypes = getUIKitMessageTypes();\n  const { dateLocale } = useLocalization();\n  const { config } = useSendbirdStateContext?.() || {};\n  const { disableUserProfile, renderUserProfile } = useContext(UserProfileContext);\n  const avatarRef = useRef(null);\n  const [mouseHover, setMouseHover] = useState(false);\n  const [supposedHover, setSupposedHover] = useState(false);\n\n  const isByMe = (userId === (message as UserMessage | FileMessage)?.sender?.userId)\n    || ((message as UserMessage | FileMessage).sendingStatus === 'pending')\n    || ((message as UserMessage | FileMessage).sendingStatus === 'failed');\n  const isByMeClassName = isByMe ? 'outgoing' : 'incoming';\n  const chainTopClassName = chainTop ? 'chain-top' : '';\n  const useReactionClassName = useReaction ? 'use-reactions' : '';\n  const supposedHoverClassName = supposedHover ? 'supposed-hover' : '';\n  const useReplying = !!((replyType === 'QUOTE_REPLY') && message?.parentMessageId && message?.parentMessage);\n  const useReplyingClassName = useReplying ? 'use-quote' : '';\n\n  if (message?.isAdminMessage?.() || message?.messageType === 'admin') {\n    return (<ClientAdminMessage message={message} />);\n  }\n  return (\n    <div\n      className={getClassName([className, 'sendbird-message-content', isByMeClassName])}\n      onMouseOver={() => setMouseHover(true)}\n      onMouseLeave={() => setMouseHover(false)}\n    >\n      {/* left */}\n      <div className={getClassName(['sendbird-message-content__left', useReactionClassName, isByMeClassName, useReplyingClassName])}>\n        {(!isByMe && !chainBottom) && (\n          /** user profile */\n          <ContextMenu\n            menuTrigger={(toggleDropdown: () => void): ReactElement => (\n              <Avatar\n                className=\"sendbird-message-content__left__avatar\"\n                src={channel?.members?.find((member) => member?.userId === message?.sender?.userId)?.profileUrl || message?.sender?.profileUrl || ''}\n                // TODO: Divide getting profileUrl logic to utils\n                ref={avatarRef}\n                width=\"28px\"\n                height=\"28px\"\n                onClick={(): void => { if (!disableUserProfile) toggleDropdown() }}\n              />\n            )}\n            menuItems={(closeDropdown: () => void): ReactElement => (\n              <MenuItems\n                /**\n                * parentRef: For catching location(x, y) of MenuItems\n                * parentContainRef: For toggling more options(menus & reactions)\n                */\n                parentRef={avatarRef}\n                parentContainRef={avatarRef}\n                closeDropdown={closeDropdown}\n                style={{ paddingTop: 0, paddingBottom: 0 }}\n              >\n                {renderUserProfile\n                  ? renderUserProfile({ user: message?.sender, close: closeDropdown })\n                  : (<UserProfile user={message.sender} onSuccess={closeDropdown} />)\n                }\n              </MenuItems>\n            )}\n          />\n        )}\n        {/* outgoing menu */}\n        {isByMe && (\n          <div className={getClassName(['sendbird-message-content-menu', useReactionClassName, supposedHoverClassName, isByMeClassName])}>\n            <MessageItemMenu\n              className=\"sendbird-message-content-menu__normal-menu\"\n              channel={channel}\n              message={message as UserMessage | FileMessage}\n              isByMe={isByMe}\n              replyType={replyType}\n              disabled={disabled}\n              showEdit={showEdit}\n              showRemove={showRemove}\n              resendMessage={resendMessage}\n              setQuoteMessage={setQuoteMessage}\n              setSupposedHover={setSupposedHover}\n            />\n            {useReaction && (\n              <MessageItemReactionMenu\n                className=\"sendbird-message-content-menu__reaction-menu\"\n                message={message as UserMessage | FileMessage}\n                userId={userId}\n                spaceFromTrigger={{}}\n                emojiContainer={emojiContainer}\n                toggleReaction={toggleReaction}\n                setSupposedHover={setSupposedHover}\n              />\n            )}\n          </div>\n        )}\n      </div>\n      {/* middle */}\n      <div className=\"sendbird-message-content__middle\">\n        {(!isByMe && !chainTop && !useReplying) && (\n          <Label\n            className=\"sendbird-message-content__middle__sender-name\"\n            type={LabelTypography.CAPTION_2}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {\n              channel?.members?.find((member) => member?.userId === message?.sender?.userId)?.nickname\n              || getSenderName(message)\n              // TODO: Divide getting profileUrl logic to utils\n            }\n          </Label>\n        )}\n        {/* quote message */}\n        {(useReplying) ? (\n          <div className={getClassName(['sendbird-message-content__middle__quote-message', isByMe ? 'outgoing' : 'incoming', useReplyingClassName])}>\n            <QuoteMessage\n              message={message}\n              userId={userId}\n              isByMe={isByMe}\n              onClick={() => {\n                if (message?.parentMessage?.createdAt && message?.parentMessageId) {\n                  scrollToMessage(message.parentMessage.createdAt, message.parentMessageId);\n                }\n              }}\n            />\n          </div>\n        ) : null}\n        {/* container: message item body + emoji reactions */}\n        <div className={getClassName(['sendbird-message-content__middle__body-container'])} >\n          {/* message status component */}\n          {(isByMe && !chainBottom) && (\n            <div className={getClassName(['sendbird-message-content__middle__body-container__created-at', 'left', supposedHoverClassName])}>\n              <div className=\"sendbird-message-content__middle__body-container__created-at__component-container\">\n                <MessageStatus\n                  message={message}\n                  channel={channel}\n                />\n              </div>\n            </div>\n          )}\n          {/* message item body components */}\n          {isTextMessage(message as UserMessage) && (\n            <TextMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message as UserMessage}\n              isByMe={isByMe}\n              mouseHover={mouseHover}\n              isMentionEnabled={config?.isMentionEnabled || false}\n            />\n          )}\n          {(isOGMessage(message as UserMessage)) && (\n            <OGMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message as UserMessage}\n              isByMe={isByMe}\n              mouseHover={mouseHover}\n              isMentionEnabled={config?.isMentionEnabled || false}\n            />\n          )}\n          {(getUIKitMessageType((message as FileMessage)) === messageTypes.FILE) && (\n            <FileMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message as FileMessage}\n              isByMe={isByMe}\n              mouseHover={mouseHover}\n            />\n          )}\n          {(isThumbnailMessage(message as FileMessage)) && (\n            <ThumbnailMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message as FileMessage}\n              isByMe={isByMe}\n              mouseHover={mouseHover}\n              showFileViewer={showFileViewer}\n            />\n          )}\n          {(getUIKitMessageType((message as FileMessage)) === messageTypes.UNKNOWN) && (\n            <UnknownMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message}\n              isByMe={isByMe}\n              mouseHover={mouseHover}\n            />\n          )}\n          {/* reactions */}\n          {(useReaction && message?.reactions?.length > 0) && (\n            <div className={getClassName([\n              'sendbird-message-content-reactions',\n              (!isByMe || isThumbnailMessage(message as FileMessage) || isOGMessage(message as UserMessage)) ? '' : 'primary',\n              mouseHover ? 'mouse-hover' : '',\n            ])}>\n              <EmojiReactions\n                userId={userId}\n                message={message}\n                isByMe={isByMe}\n                emojiContainer={emojiContainer}\n                memberNicknamesMap={nicknamesMap}\n                toggleReaction={toggleReaction}\n              />\n            </div>\n          )}\n          {(!isByMe && !chainBottom) && (\n            <Label\n              className={getClassName(['sendbird-message-content__middle__body-container__created-at', 'right', supposedHoverClassName])}\n              type={LabelTypography.CAPTION_3}\n              color={LabelColors.ONBACKGROUND_2}\n            >\n              {format(message?.createdAt || 0, 'p', {\n                locale: dateLocale,\n              })}\n            </Label>\n          )}\n        </div>\n      </div>\n      {/* right */}\n      <div className={getClassName(['sendbird-message-content__right', chainTopClassName, useReactionClassName, useReplyingClassName])}>\n        {/* incoming menu */}\n        {!isByMe && (\n          <div className={getClassName(['sendbird-message-content-menu', chainTopClassName, supposedHoverClassName, isByMeClassName])}>\n            {useReaction && (\n              <MessageItemReactionMenu\n                className=\"sendbird-message-content-menu__reaction-menu\"\n                message={message as UserMessage | FileMessage}\n                userId={userId}\n                spaceFromTrigger={{}}\n                emojiContainer={emojiContainer}\n                toggleReaction={toggleReaction}\n                setSupposedHover={setSupposedHover}\n              />\n            )}\n            <MessageItemMenu\n              className=\"sendbird-message-content-menu__normal-menu\"\n              channel={channel}\n              message={message as UserMessage | FileMessage}\n              isByMe={isByMe}\n              replyType={replyType}\n              disabled={disabled}\n              showRemove={showRemove}\n              resendMessage={resendMessage}\n              setQuoteMessage={setQuoteMessage}\n              setSupposedHover={setSupposedHover}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":["MessageContent","_a","className","userId","channel","message","_h","disabled","_j","chainTop","_k","chainBottom","_l","useReaction","replyType","nicknamesMap","emojiContainer","scrollToMessage","showEdit","showRemove","showFileViewer","resendMessage","toggleReaction","setQuoteMessage","messageTypes","getUIKitMessageTypes","dateLocale","useLocalization","config","useSendbirdStateContext","_m","useContext","UserProfileContext","disableUserProfile","renderUserProfile","avatarRef","useRef","_o","useState","mouseHover","setMouseHover","_p","supposedHover","setSupposedHover","isByMe","sender","sendingStatus","isByMeClassName","chainTopClassName","useReactionClassName","supposedHoverClassName","useReplying","parentMessageId","parentMessage","useReplyingClassName","isAdminMessage","messageType","React","ClientAdminMessage","getClassName","ContextMenu","toggleDropdown","Avatar","members","find","member","profileUrl","closeDropdown","MenuItems","paddingTop","paddingBottom","user","close","UserProfile","MessageItemMenu","MessageItemReactionMenu","Label","LabelTypography","CAPTION_2","LabelColors","ONBACKGROUND_2","nickname","getSenderName","QuoteMessage","createdAt","MessageStatus","isTextMessage","TextMessageItemBody","isMentionEnabled","isOGMessage","OGMessageItemBody","getUIKitMessageType","FILE","FileMessageItemBody","isThumbnailMessage","ThumbnailMessageItemBody","UNKNOWN","UnknownMessageItemBody","reactions","length","EmojiReactions","CAPTION_3","format","locale"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAyDwBA,eAAeC;;;MACrCC,SAAS;MACTC,MAAM;MACNC,OAAO;MACPC,OAAO;MACPC;MAAAC,QAAQ,mBAAG;MACXC;MAAAC,QAAQ,mBAAG;MACXC;MAAAC,WAAW,mBAAG;MACdC;MAAAC,WAAW,mBAAG;MACdC,SAAS;MACTC,YAAY;MACZC,cAAc;MACdC,eAAe;MACfC,QAAQ;MACRC,UAAU;MACVC,cAAc;MACdC,aAAa;MACbC,cAAc;MACdC,eAAe;AAEf,MAAMC,YAAY,GAAGC,0BAAoB,EAAzC;AACQ,MAAAC,UAAU,GAAKC,mCAAe,aAA9B;AACA,MAAAC,MAAM,GAAK,CAAA,CAAAC,uBAAuB,SAAvB,IAAAA,uBAAuB,WAAvB,SAAA,GAAAA,uBAAuB,EAAvB,KAA+B,EAA/B,QAAX;;AACF,MAAAC,KAA4CC,gBAAU,CAACC,qCAAD,CAAtD;AAAA,MAAEC,kBAAkB,wBAApB;AAAA,MAAsBC,iBAAiB,uBAAvC;;AACN,MAAMC,SAAS,GAAGC,YAAM,CAAC,IAAD,CAAxB;;AACM,MAAAC,KAA8BC,cAAQ,CAAC,KAAD,CAAtC;AAAA,MAACC,UAAU,QAAX;AAAA,MAAaC,aAAa,QAA1B;;AACA,MAAAC,KAAoCH,cAAQ,CAAC,KAAD,CAA5C;AAAA,MAACI,aAAa,QAAd;AAAA,MAAgBC,gBAAgB,QAAhC;;AAEN,MAAMC,MAAM,GAAIzC,MAAM,MAAK,MAAA,MAACE,OAAD,UAAA,iBAAA,SAAA,MAAwCwC,MAAxC,UAAA,iBAAA,SAAA,MAAgD1C,MAArD,CAAP,IACRE,OAAqC,CAACyC,aAAtC,KAAwD,SADhD,IAERzC,OAAqC,CAACyC,aAAtC,KAAwD,QAF/D;AAGA,MAAMC,eAAe,GAAGH,MAAM,GAAG,UAAH,GAAgB,UAA9C;AACA,MAAMI,iBAAiB,GAAGvC,QAAQ,GAAG,WAAH,GAAiB,EAAnD;AACA,MAAMwC,oBAAoB,GAAGpC,WAAW,GAAG,eAAH,GAAqB,EAA7D;AACA,MAAMqC,sBAAsB,GAAGR,aAAa,GAAG,gBAAH,GAAsB,EAAlE;AACA,MAAMS,WAAW,GAAG,CAAC,EAAGrC,SAAS,KAAK,aAAf,KAAiCT,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAE+C,eAA1C,MAA6D/C,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAEgD,aAAtE,CAAF,CAArB;AACA,MAAMC,oBAAoB,GAAGH,WAAW,GAAG,WAAH,GAAiB,EAAzD;;AAEA,MAAI,CAAA,MAAA9C,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAEkD,cAAT,UAAA,iBAAA,SAAA,WAAAlD,QAAA,KAA+B,CAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAEmD,WAAT,MAAyB,OAA5D,EAAqE;AACnE,wBAAQC,wCAACC,eAAD;AAAoB,MAAA,OAAO,EAAErD;AAA7B,MAAR;AACD;;AACD,sBACEoD;AACE,IAAA,SAAS,EAAEE,kBAAY,CAAC,CAACzD,SAAD,EAAY,0BAAZ,EAAwC6C,eAAxC,CAAD,CADzB;AAEE,IAAA,WAAW,EAAE;AAAM,aAAAP,aAAa,CAAC,IAAD,CAAb;AAAmB,KAFxC;AAGE,IAAA,YAAY,EAAE;AAAM,aAAAA,aAAa,CAAC,KAAD,CAAb;AAAoB;AAH1C,kBAMEiB;AAAK,IAAA,SAAS,EAAEE,kBAAY,CAAC,CAAC,gCAAD,EAAmCV,oBAAnC,EAAyDF,eAAzD,EAA0EO,oBAA1E,CAAD;AAA5B,KACI,CAACV,MAAD,IAAW,CAACjC,WAAb;AAAA;;AACC;AACA,0CAACiD,yBAAD;AACE,IAAA,WAAW,EAAE,qBAACC,cAAD;;;AAA8C,0BACzDJ,wCAACK,oBAAD;AACE,QAAA,SAAS,EAAC,wCADZ;AAEE,QAAA,GAAG,EAAE,CAAA,MAAA,MAAA1D,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAE2D,OAAT,UAAA,iBAAA,SAAA,MAAkBC,KAAK,UAACC,MAAD;;;AAAY,iBAAA,CAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,SAAA,GAAAA,MAAM,CAAE9D,MAAR,OAAmB,MAAAE,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAEwC,MAAT,UAAA,iBAAA,SAAA,MAAiB1C,MAApC,CAAA;AAA0C,UAA7E,UAAA,iBAAA,SAAA,MAAgF+D,UAAhF,MAA8F,MAAA7D,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAEwC,MAAT,UAAA,iBAAA,SAAA,MAAiBqB,UAA/G,KAA6H,EAFpI;AAAA;AAIE,QAAA,GAAG,EAAE/B,SAJP;AAKE,QAAA,KAAK,EAAC,MALR;AAME,QAAA,MAAM,EAAC,MANT;AAOE,QAAA,OAAO,EAAE;AAAc,cAAI,CAACF,kBAAL,EAAyB4B,cAAc;AAAI;AAPpE,QADyD;AAU1D,KAXH;AAYE,IAAA,SAAS,EAAE,mBAACM,aAAD;AAA6C,0BACtDV,wCAACW;AACC;;;;AADF;AAKE,QAAA,SAAS,EAAEjC,SALb;AAME,QAAA,gBAAgB,EAAEA,SANpB;AAOE,QAAA,aAAa,EAAEgC,aAPjB;AAQE,QAAA,KAAK,EAAE;AAAEE,UAAAA,UAAU,EAAE,CAAd;AAAiBC,UAAAA,aAAa,EAAE;AAAhC;AART,SAUGpC,iBAAiB,GACdA,iBAAiB,CAAC;AAAEqC,QAAAA,IAAI,EAAElE,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAEwC,MAAjB;AAAyB2B,QAAAA,KAAK,EAAEL;AAAhC,OAAD,CADH,gBAEbV,wCAACgB,cAAD;AAAa,QAAA,IAAI,EAAEpE,OAAO,CAACwC,MAA3B;AAAmC,QAAA,SAAS,EAAEsB;AAA9C,QAZP,CADsD;AAgBvD;AA5BH,IAHJ,EAmCGvB,MAAM,iBACLa;AAAK,IAAA,SAAS,EAAEE,kBAAY,CAAC,CAAC,+BAAD,EAAkCV,oBAAlC,EAAwDC,sBAAxD,EAAgFH,eAAhF,CAAD;AAA5B,kBACEU,wCAACiB,kBAAD;AACE,IAAA,SAAS,EAAC,4CADZ;AAEE,IAAA,OAAO,EAAEtE,OAFX;AAGE,IAAA,OAAO,EAAEC,OAHX;AAIE,IAAA,MAAM,EAAEuC,MAJV;AAKE,IAAA,SAAS,EAAE9B,SALb;AAME,IAAA,QAAQ,EAAEP,QANZ;AAOE,IAAA,QAAQ,EAAEW,QAPZ;AAQE,IAAA,UAAU,EAAEC,UARd;AASE,IAAA,aAAa,EAAEE,aATjB;AAUE,IAAA,eAAe,EAAEE,eAVnB;AAWE,IAAA,gBAAgB,EAAEoB;AAXpB,IADF,EAcG9B,WAAW,iBACV4C,wCAACkB,0BAAD;AACE,IAAA,SAAS,EAAC,8CADZ;AAEE,IAAA,OAAO,EAAEtE,OAFX;AAGE,IAAA,MAAM,EAAEF,MAHV;AAIE,IAAA,gBAAgB,EAAE,EAJpB;AAKE,IAAA,cAAc,EAAEa,cALlB;AAME,IAAA,cAAc,EAAEM,cANlB;AAOE,IAAA,gBAAgB,EAAEqB;AAPpB,IAfJ,CApCJ,CANF,eAuEEc;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,CAACb,MAAD,IAAW,CAACnC,QAAZ,IAAwB,CAAC0C,WAA1B,iBACCM,wCAACmB,cAAD;AACE,IAAA,SAAS,EAAC,+CADZ;AAEE,IAAA,IAAI,EAAEC,wBAAe,CAACC,SAFxB;AAGE,IAAA,KAAK,EAAEC,oBAAW,CAACC;AAHrB,KAMI,CAAA,MAAA,MAAA5E,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAE2D,OAAT,UAAA,iBAAA,SAAA,MAAkBC,KAAK,UAACC,MAAD;;;AAAY,WAAA,CAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,SAAA,GAAAA,MAAM,CAAE9D,MAAR,OAAmB,MAAAE,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAEwC,MAAT,UAAA,iBAAA,SAAA,MAAiB1C,MAApC,CAAA;AAA0C,IAA7E,UAAA,iBAAA,SAAA,MAAgF8E,QAAhF,KACGC,mBAAa,CAAC7E,OAAD,CAPpB;AAAA,GAFJ,EAeI8C,WAAD,gBACCM;AAAK,IAAA,SAAS,EAAEE,kBAAY,CAAC,CAAC,iDAAD,EAAoDf,MAAM,GAAG,UAAH,GAAgB,UAA1E,EAAsFU,oBAAtF,CAAD;AAA5B,kBACEG,wCAAC0B,eAAD;AACE,IAAA,OAAO,EAAE9E,OADX;AAEE,IAAA,MAAM,EAAEF,MAFV;AAGE,IAAA,MAAM,EAAEyC,MAHV;AAIE,IAAA,OAAO,EAAE;;;AACP,UAAI,CAAA,MAAAvC,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAEgD,aAAT,UAAA,iBAAA,SAAA,MAAwB+B,SAAxB,MAAqC/E,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAE+C,eAA9C,CAAJ,EAAmE;AACjEnC,QAAAA,eAAe,CAACZ,OAAO,CAACgD,aAAR,CAAsB+B,SAAvB,EAAkC/E,OAAO,CAAC+C,eAA1C,CAAf;AACD;AACF;AARH,IADF,CADD,GAaG,IA5BN,eA8BEK;AAAK,IAAA,SAAS,EAAEE,kBAAY,CAAC,CAAC,kDAAD,CAAD;AAA5B,KAEIf,MAAM,IAAI,CAACjC,WAAZ,iBACC8C;AAAK,IAAA,SAAS,EAAEE,kBAAY,CAAC,CAAC,8DAAD,EAAiE,MAAjE,EAAyET,sBAAzE,CAAD;AAA5B,kBACEO;AAAK,IAAA,SAAS,EAAC;AAAf,kBACEA,wCAAC4B,2BAAD;AACE,IAAA,OAAO,EAAEhF,OADX;AAEE,IAAA,OAAO,EAAED;AAFX,IADF,CADF,CAHJ,EAaGkF,mBAAa,CAACjF,OAAD,CAAb,iBACCoD,wCAAC8B,sBAAD;AACE,IAAA,SAAS,EAAC,qDADZ;AAEE,IAAA,OAAO,EAAElF,OAFX;AAGE,IAAA,MAAM,EAAEuC,MAHV;AAIE,IAAA,UAAU,EAAEL,UAJd;AAKE,IAAA,gBAAgB,EAAE,CAAAX,MAAM,SAAN,IAAAA,MAAM,WAAN,SAAA,GAAAA,MAAM,CAAE4D,gBAAR,KAA4B;AALhD,IAdJ,EAsBIC,iBAAW,CAACpF,OAAD,CAAZ,iBACCoD,wCAACiC,oBAAD;AACE,IAAA,SAAS,EAAC,qDADZ;AAEE,IAAA,OAAO,EAAErF,OAFX;AAGE,IAAA,MAAM,EAAEuC,MAHV;AAIE,IAAA,UAAU,EAAEL,UAJd;AAKE,IAAA,gBAAgB,EAAE,CAAAX,MAAM,SAAN,IAAAA,MAAM,WAAN,SAAA,GAAAA,MAAM,CAAE4D,gBAAR,KAA4B;AALhD,IAvBJ,EA+BIG,yBAAmB,CAAEtF,OAAF,CAAnB,KAAkDmB,YAAY,CAACoE,IAAhE,iBACCnC,wCAACoC,sBAAD;AACE,IAAA,SAAS,EAAC,qDADZ;AAEE,IAAA,OAAO,EAAExF,OAFX;AAGE,IAAA,MAAM,EAAEuC,MAHV;AAIE,IAAA,UAAU,EAAEL;AAJd,IAhCJ,EAuCIuD,wBAAkB,CAACzF,OAAD,CAAnB,iBACCoD,wCAACsC,2BAAD;AACE,IAAA,SAAS,EAAC,qDADZ;AAEE,IAAA,OAAO,EAAE1F,OAFX;AAGE,IAAA,MAAM,EAAEuC,MAHV;AAIE,IAAA,UAAU,EAAEL,UAJd;AAKE,IAAA,cAAc,EAAEnB;AALlB,IAxCJ,EAgDIuE,yBAAmB,CAAEtF,OAAF,CAAnB,KAAkDmB,YAAY,CAACwE,OAAhE,iBACCvC,wCAACwC,yBAAD;AACE,IAAA,SAAS,EAAC,qDADZ;AAEE,IAAA,OAAO,EAAE5F,OAFX;AAGE,IAAA,MAAM,EAAEuC,MAHV;AAIE,IAAA,UAAU,EAAEL;AAJd,IAjDJ,EAyDI1B,WAAW,IAAI,CAAA,MAAAR,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAE6F,SAAT,UAAA,iBAAA,SAAA,MAAoBC,MAApB,IAA6B,CAA7C,iBACC1C;AAAK,IAAA,SAAS,EAAEE,kBAAY,CAAC,CAC3B,oCAD2B,EAE1B,CAACf,MAAD,IAAWkD,wBAAkB,CAACzF,OAAD,CAA7B,IAAyDoF,iBAAW,CAACpF,OAAD,CAArE,GAAiG,EAAjG,GAAsG,SAF3E,EAG3BkC,UAAU,GAAG,aAAH,GAAmB,EAHF,CAAD;AAA5B,kBAKEkB,wCAAC2C,iBAAD;AACE,IAAA,MAAM,EAAEjG,MADV;AAEE,IAAA,OAAO,EAAEE,OAFX;AAGE,IAAA,MAAM,EAAEuC,MAHV;AAIE,IAAA,cAAc,EAAE5B,cAJlB;AAKE,IAAA,kBAAkB,EAAED,YALtB;AAME,IAAA,cAAc,EAAEO;AANlB,IALF,CA1DJ,EAyEI,CAACsB,MAAD,IAAW,CAACjC,WAAb,iBACC8C,wCAACmB,cAAD;AACE,IAAA,SAAS,EAAEjB,kBAAY,CAAC,CAAC,8DAAD,EAAiE,OAAjE,EAA0ET,sBAA1E,CAAD,CADzB;AAEE,IAAA,IAAI,EAAE2B,wBAAe,CAACwB,SAFxB;AAGE,IAAA,KAAK,EAAEtB,oBAAW,CAACC;AAHrB,KAKGsB,cAAM,CAAC,CAAAjG,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAE+E,SAAT,KAAsB,CAAvB,EAA0B,GAA1B,EAA+B;AACpCmB,IAAAA,MAAM,EAAE7E;AAD4B,GAA/B,CALT,CA1EJ,CA9BF,CAvEF,eA4LE+B;AAAK,IAAA,SAAS,EAAEE,kBAAY,CAAC,CAAC,iCAAD,EAAoCX,iBAApC,EAAuDC,oBAAvD,EAA6EK,oBAA7E,CAAD;AAA5B,KAEG,CAACV,MAAD,iBACCa;AAAK,IAAA,SAAS,EAAEE,kBAAY,CAAC,CAAC,+BAAD,EAAkCX,iBAAlC,EAAqDE,sBAArD,EAA6EH,eAA7E,CAAD;AAA5B,KACGlC,WAAW,iBACV4C,wCAACkB,0BAAD;AACE,IAAA,SAAS,EAAC,8CADZ;AAEE,IAAA,OAAO,EAAEtE,OAFX;AAGE,IAAA,MAAM,EAAEF,MAHV;AAIE,IAAA,gBAAgB,EAAE,EAJpB;AAKE,IAAA,cAAc,EAAEa,cALlB;AAME,IAAA,cAAc,EAAEM,cANlB;AAOE,IAAA,gBAAgB,EAAEqB;AAPpB,IAFJ,eAYEc,wCAACiB,kBAAD;AACE,IAAA,SAAS,EAAC,4CADZ;AAEE,IAAA,OAAO,EAAEtE,OAFX;AAGE,IAAA,OAAO,EAAEC,OAHX;AAIE,IAAA,MAAM,EAAEuC,MAJV;AAKE,IAAA,SAAS,EAAE9B,SALb;AAME,IAAA,QAAQ,EAAEP,QANZ;AAOE,IAAA,UAAU,EAAEY,UAPd;AAQE,IAAA,aAAa,EAAEE,aARjB;AASE,IAAA,eAAe,EAAEE,eATnB;AAUE,IAAA,gBAAgB,EAAEoB;AAVpB,IAZF,CAHJ,CA5LF,CADF;AA6ND;;;;"}