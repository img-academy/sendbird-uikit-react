{"version":3,"file":"MemberList-475ddc8c.js","sources":["../../src/smart-components/ChannelSettings/components/AdminPanel/MembersModal.tsx","../../src/smart-components/ChannelSettings/components/AdminPanel/InviteMembersModal.tsx","../../src/smart-components/ChannelSettings/components/AdminPanel/MemberList.tsx"],"sourcesContent":["import React, {\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react'\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport { noop } from '../../../../utils/utils';\n\nimport { useChannelSettings } from '../../context/ChannelSettingsProvider';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\n\ninterface Props {\n  onCancel(): void;\n}\n\nexport default function MembersModal({ onCancel }: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [memberQuery, setMemberQuery] = useState(null);\n\n  const { channel } = useChannelSettings();\n  const state = useSendbirdStateContext();\n  const currentUser = state?.config?.userId;\n\n  useEffect(() => {\n    const memberListQuery = channel.createMemberListQuery();\n    memberListQuery.limit = 20;\n    memberListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n    });\n    setMemberQuery(memberListQuery);\n  }, [])\n  return (\n    <div>\n      <Modal\n        hideFooter\n        onCancel={() => onCancel()}\n        onSubmit={noop}\n        titleText=\"All Members\"\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setMembers([\n                  ...members,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              user={member}\n              key={member.userId}\n              currentUser={currentUser}\n              action={({ parentRef, actionRef }) => (\n                <>\n                  {channel.myRole === 'operator' && (\n                    <ContextMenu\n                      menuTrigger={(toggleDropdown) => (\n                        <IconButton\n                          className=\"sendbird-user-message__more__menu\"\n                          width=\"32px\"\n                          height=\"32px\"\n                          onClick={toggleDropdown}\n                        >\n                          <Icon\n                            width=\"24px\"\n                            height=\"24px\"\n                            type={IconTypes.MORE}\n                            fillColor={IconColors.CONTENT_INVERSE}\n                          />\n                        </IconButton>\n                      )}\n                      menuItems={(closeDropdown) => (\n                        <MenuItems\n                          parentContainRef={parentRef}\n                          parentRef={actionRef} // for catching location(x, y) of MenuItems\n                          closeDropdown={closeDropdown}\n                          openLeft\n                        >\n                          <MenuItem\n                            onClick={() => {\n                              if ((member.role !== 'operator')) {\n                                channel.addOperators([member.userId], () => {\n                                  setMembers(members.map(m => {\n                                    if(m.userId === member.userId) {\n                                      return {\n                                        ...member,\n                                        role: 'operator',\n                                      };\n                                    }\n                                    return m;\n                                  }));\n                                  closeDropdown();\n                                });\n                              } else {\n                                channel.removeOperators([member.userId], () => {\n                                  setMembers(members.map(m => {\n                                    if(m.userId === member.userId) {\n                                      return {\n                                        ...member,\n                                        role: '',\n                                      };\n                                    }\n                                    return m;\n                                  }));\n                                  closeDropdown();\n                                });\n                              }\n                            }}\n                          >\n                            { member.role !== 'operator' ? 'Promote to operator' : 'Demote operator'}\n                          </MenuItem>\n                          {\n                            // No muted members in broadcast channel\n                            !channel.isBroadcast && (\n                              <MenuItem\n                                onClick={() => {\n                                  if (member.isMuted) {\n                                    channel.unmuteUser(member, () => {\n                                      setMembers(members.map(m => {\n                                        if(m.userId === member.userId) {\n                                          return {\n                                            ...member,\n                                            isMuted: false,\n                                          };\n                                        }\n                                        return m;\n                                      }));\n                                      closeDropdown();\n                                    })\n                                  } else {\n                                    channel.muteUser(member, () => {\n                                      setMembers(members.map(m => {\n                                        if(m.userId === member.userId) {\n                                          return {\n                                            ...member,\n                                            isMuted: true,\n                                          };\n                                        }\n                                        return m;\n                                      }));\n                                      closeDropdown();\n                                    });\n                                  }\n                                }}\n                              >\n                                { member.isMuted ? 'Unmute' : 'Mute' }\n                              </MenuItem>\n                            )\n                          }\n                          <MenuItem\n                            onClick={() => {\n                              channel.banUser(member, -1, '', () => {\n                                setMembers(members.filter(({ userId }) => {\n                                  return userId !== member.userId;\n                                }));\n                              });\n                            }}\n                          >\n                            Ban\n                          </MenuItem>\n                        </MenuItems>\n                      )}\n                    />\n                  )}\n                </>\n              )}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, { ReactElement, useEffect, useState } from 'react'\n\nimport Modal from '../../../../ui/Modal';\nimport { Type as ButtonType } from '../../../../ui/Button/type';\nimport UserListItem from '../../../../ui/UserListItem';\nimport { useChannelSettings } from '../../context/ChannelSettingsProvider';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\n\ninterface Props {\n  onCancel(): void;\n  onSubmit(members: Array<string>): void;\n}\n\nexport default function InviteMembers({\n  onCancel,\n  onSubmit,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [selectedMembers, setSelectedMembers] = useState({});\n  const [userQuery, setUserQuery] = useState(null);\n\n  const state = useSendbirdStateContext();\n  const sdk = state?.stores?.sdkStore?.sdk;\n\n  const { channel } = useChannelSettings();\n\n  useEffect(() => {\n    const userListQuery = sdk?.createApplicationUserListQuery();\n    userListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n    });\n    setUserQuery(userListQuery);\n  }, [sdk])\n  return (\n    <div>\n      <Modal\n        disabled={Object.keys(selectedMembers).length === 0}\n        submitText=\"Invite\"\n        type={ButtonType.PRIMARY}\n        onCancel={() => onCancel()}\n        onSubmit={() => {\n          const members = Object.keys(selectedMembers).filter((m) => selectedMembers[m]);\n          channel.inviteWithUserIds(members).then(() => {\n            onSubmit(members);\n          });\n        }}\n        titleText=\"Select members\"\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = userQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n            if (hasNext && fetchMore) {\n              userQuery.next((users, error) => {\n                if (error) {\n                  return;\n                }\n                setMembers([\n                  ...members,\n                  ...users,\n                ])\n              });\n            }\n          }}\n        >\n          <div className=\"sendbird-more-members__popup-scroll__inner\">\n            { members.map((member) => (\n              <UserListItem\n                checkBox\n                checked={selectedMembers[member.userId]}\n                onChange={\n                  (event) => {\n                    const modifiedSelectedMembers = {\n                      ...selectedMembers,\n                      [event.target.id]: event.target.checked,\n                    };\n                    if (!event.target.checked) {\n                      delete modifiedSelectedMembers[event.target.id];\n                    }\n                    setSelectedMembers(modifiedSelectedMembers);\n                  }\n                }\n                user={member}\n                key={member.userId}\n              />\n            ))}\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n} from 'react';\n\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport UserListItem from '../UserListItem';\nimport MembersModal from './MembersModal';\nimport InviteMembers from './InviteMembersModal';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { useChannelSettings } from '../../context/ChannelSettingsProvider';\nimport uuidv4 from '../../../../utils/uuid';\n\nexport const MemberList = (): ReactElement => {\n  const [members, setMembers] = useState([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showAllMembers, setShowAllMembers] = useState(false);\n  const [showInviteMembers, setShowInviteMembers] = useState(false);\n\n  const state = useSendbirdStateContext();\n  const {\n    channel,\n    setChannelUpdateId,\n  } = useChannelSettings();\n\n  const sdk = state?.stores?.sdkStore?.sdk;\n  const userId = state?.config?.userId;\n\n  useEffect(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refershList = useCallback(\n    () => {\n      if (!channel) {\n        setMembers([]);\n        return;\n      }\n      const memberUserListQuery = channel.createMemberListQuery();\n      memberUserListQuery.limit = 10;\n      memberUserListQuery.next((members, error) => {\n        if (error) {\n          return;\n        }\n        setMembers(members);\n        setHasNext(memberUserListQuery.hasNext);\n        setChannelUpdateId(uuidv4());\n      });\n    },\n    [channel],\n  );\n\n  return (\n    <>\n      {\n        members.map((member) => (\n          <UserListItem\n            key={member.userId}\n            user={member}\n            currentUser={sdk.currentUser.userId}\n            action={\n              (userId !== member.userId)\n                ? ({ actionRef, parentRef }) => (\n                  <ContextMenu\n                    menuTrigger={(toggleDropdown) => (\n                      <IconButton\n                        className=\"sendbird-user-message__more__menu\"\n                        width=\"32px\"\n                        height=\"32px\"\n                        onClick={toggleDropdown}\n                      >\n                        <Icon\n                          width=\"24px\"\n                          height=\"24px\"\n                          type={IconTypes.MORE}\n                          fillColor={IconColors.CONTENT_INVERSE}\n                        />\n                      </IconButton>\n                    )}\n                    menuItems={(closeDropdown) => (\n                      <MenuItems\n                        parentContainRef={parentRef}\n                        parentRef={actionRef} // for catching location(x, y) of MenuItems\n                        closeDropdown={closeDropdown}\n                        openLeft\n                      >\n                        <MenuItem\n                          onClick={() => {\n                            if ((member.role !== 'operator')) {\n                              channel.addOperators([member.userId], () => {\n                                refershList();\n                                closeDropdown();\n                              });\n                            } else {\n                              channel.removeOperators([member.userId], () => {\n                                refershList();\n                                closeDropdown();\n                              });\n                            }\n                          }}\n                        >\n                          {member.role !== 'operator' ? 'Promote to operator' : 'Demote operator'}\n                        </MenuItem>\n                        {\n                          // No muted members in broadcast channel\n                          !channel.isBroadcast && (\n                            <MenuItem\n                              onClick={() => {\n                                if (member.isMuted) {\n                                  channel.unmuteUser(member, () => {\n                                    refershList();\n                                    closeDropdown();\n                                  })\n                                } else {\n                                  channel.muteUser(member, () => {\n                                    refershList();\n                                    closeDropdown();\n                                  });\n                                }\n                              }}\n                            >\n                              { member.isMuted ? 'Unmute' : 'Mute'}\n                            </MenuItem>\n                          )\n                        }\n                        <MenuItem\n                          onClick={() => {\n                            channel.banUser(member, -1, '', () => {\n                              refershList();\n                              closeDropdown();\n                            });\n                          }}\n                        >\n                          Ban\n                    </MenuItem>\n                      </MenuItems>\n                    )}\n                  />\n                )\n                : null\n            }\n          />\n        ))\n      }\n      <div\n        className=\"sendbird-channel-settings-accordion__footer\"\n      >\n        {\n          hasNext && (\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => setShowAllMembers(true)}\n            >\n              All members\n            </Button>\n          )\n        }\n        <Button\n          type={ButtonTypes.SECONDARY}\n          size={ButtonSizes.SMALL}\n          onClick={() => setShowInviteMembers(true)}\n        >\n          Invite members\n        </Button>\n      </div>\n      {\n        showAllMembers && (\n          <MembersModal\n            onCancel={() => {\n              setShowAllMembers(false);\n              refershList();\n            }}\n          />\n        )\n      }\n      {\n        showInviteMembers && (\n          <InviteMembers\n            onSubmit={() => {\n              setShowInviteMembers(false);\n              refershList();\n            }}\n            onCancel={() => setShowInviteMembers(false)}\n          />\n        )\n      }\n    </>\n  );\n}\n\nexport default MemberList;\n"],"names":["MembersModal","_a","onCancel","_c","useState","members","setMembers","_d","memberQuery","setMemberQuery","channel","useChannelSettings","state","useSendbirdStateContext","currentUser","config","userId","useEffect","memberListQuery","createMemberListQuery","limit","next","error","React","Modal","noop","e","hasNext","target","fetchMore","clientHeight","scrollTop","scrollHeight","o","map","member","UserListItem","parentRef","actionRef","myRole","ContextMenu","toggleDropdown","IconButton","Icon","IconTypes","MORE","IconColors","CONTENT_INVERSE","closeDropdown","MenuItems","MenuItem","role","addOperators","m","removeOperators","isBroadcast","isMuted","unmuteUser","muteUser","banUser","filter","InviteMembers","onSubmit","_e","selectedMembers","setSelectedMembers","_f","userQuery","setUserQuery","sdk","stores","sdkStore","userListQuery","createApplicationUserListQuery","Object","keys","length","ButtonType","PRIMARY","inviteWithUserIds","then","users","event","modifiedSelectedMembers","id","checked","MemberList","setHasNext","showAllMembers","setShowAllMembers","_g","showInviteMembers","setShowInviteMembers","_h","setChannelUpdateId","memberUserListQuery","refershList","useCallback","uuidv4","Button","ButtonTypes","SECONDARY","ButtonSizes","SMALL"],"mappings":"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"}