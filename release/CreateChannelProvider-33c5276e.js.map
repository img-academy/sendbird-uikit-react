{"version":3,"file":"CreateChannelProvider-33c5276e.js","sources":["../src/smart-components/CreateChannel/types.ts","../src/smart-components/CreateChannel/context/CreateChannelProvider.tsx"],"sourcesContent":["export enum CHANNEL_TYPE {\n  GROUP = 'group',\n  SUPERGROUP = 'supergroup',\n  BROADCAST = 'broadcast',\n}\n","import React, { useState } from 'react';\nimport Sendbird from 'sendbird';\n\nimport { getCreateChannel } from '../../../lib/selectors';\nimport useSendbirdStateContext from '../../../hooks/useSendbirdStateContext';\nimport { CHANNEL_TYPE } from '../types';\n\nconst CreateChannelContext = React.createContext(undefined);\n\ninterface UserListQuery {\n  hasNext?: boolean;\n  next(callback: unknown): void;\n}\n\nexport interface CreateChannelProviderProps {\n  children?: React.ReactNode;\n  onCreateChannel(channel: Sendbird.GroupChannel): void;\n  onBeforeCreateChannel?(users: Array<string>): Sendbird.GroupChannelParams;\n  userListQuery?(): UserListQuery;\n}\n\ntype CreateChannel = (channelParams: Sendbird.GroupChannelParams) => Promise<Sendbird.GroupChannel>;\n\nexport interface CreateChannelContextInterface {\n  onBeforeCreateChannel?(users: Array<string>): Sendbird.GroupChannelParams;\n  createChannel: CreateChannel;\n  sdk: Sendbird.SendBirdInstance;\n  userListQuery?(): UserListQuery;\n  onCreateChannel?(channel: Sendbird.GroupChannel): void;\n  step: number,\n  setStep: React.Dispatch<React.SetStateAction<number>>,\n  type: CHANNEL_TYPE,\n  setType: React.Dispatch<React.SetStateAction<CHANNEL_TYPE>>,\n}\n\nconst CreateChannelProvider: React.FC<CreateChannelProviderProps> = (props: CreateChannelProviderProps) => {\n  const {\n    children,\n    onCreateChannel,\n    onBeforeCreateChannel,\n    userListQuery,\n  } = props;\n\n  const store = useSendbirdStateContext();\n  const userListQuery_ = store?.config?.userListQuery;\n  const createChannel: (channelParams: Sendbird.GroupChannelParams)\n    => Promise<Sendbird.GroupChannel> = getCreateChannel(store);\n\n  const [step, setStep] = useState(0);\n  const [type, setType] = useState(CHANNEL_TYPE.GROUP);\n\n  return (\n    <CreateChannelContext.Provider value={{\n      onBeforeCreateChannel,\n      createChannel,\n      onCreateChannel,\n      userListQuery: userListQuery || userListQuery_,\n      step,\n      setStep,\n      type,\n      setType,\n    }}>\n      {children}\n    </CreateChannelContext.Provider>\n  );\n}\n\nconst useCreateChannelContext = (): CreateChannelContextInterface => (\n  React.useContext(CreateChannelContext)\n);\n\nexport { CreateChannelProvider, useCreateChannelContext };\n"],"names":["CHANNEL_TYPE","CreateChannelContext","React","createContext","undefined","CreateChannelProvider","props","children","onCreateChannel","onBeforeCreateChannel","userListQuery","store","useSendbirdStateContext","userListQuery_","config","createChannel","getCreateChannel","_b","useState","step","setStep","_c","GROUP","type","setType","useCreateChannelContext","useContext"],"mappings":";;;;IAAYA;;AAAZ,WAAYA;AACVA,EAAAA,qBAAA,UAAA;AACAA,EAAAA,0BAAA,eAAA;AACAA,EAAAA,yBAAA,cAAA;AACD,CAJD,EAAYA,YAAY,KAAZA,YAAY,KAAA,CAAxB;;ACOA,IAAMC,oBAAoB,gBAAGC,cAAK,CAACC,aAAN,CAAoBC,SAApB,CAA7B;;IA4BMC,qBAAqB,GAAyC,SAA9DA,qBAA8D,CAACC,KAAD;;;AAEhE,MAAAC,QAAQ,GAIND,KAAK,SAJP;AAAA,MACAE,eAAe,GAGbF,KAAK,gBAJP;AAAA,MAEAG,qBAAqB,GAEnBH,KAAK,sBAJP;AAAA,MAGAI,aAAa,GACXJ,KAAK,cAJP;AAMF,MAAMK,KAAK,GAAGC,uBAAuB,EAArC;AACA,MAAMC,cAAc,GAAG,MAAAF,KAAK,SAAL,IAAAA,KAAK,WAAL,SAAA,GAAAA,KAAK,CAAEG,MAAP,UAAA,iBAAA,SAAA,MAAeJ,aAAtC;AACA,MAAMK,aAAa,GACmBC,gBAAgB,CAACL,KAAD,CADtD;;AAGM,MAAAM,KAAkBC,QAAQ,CAAC,CAAD,CAA1B;AAAA,MAACC,IAAI,QAAL;AAAA,MAAOC,OAAO,QAAd;;AACA,MAAAC,KAAkBH,QAAQ,CAAClB,YAAY,CAACsB,KAAd,CAA1B;AAAA,MAACC,IAAI,QAAL;AAAA,MAAOC,OAAO,QAAd;;AAEN,sBACEtB,6BAAC,oBAAD,CAAsB,QAAtB;AAA+B,IAAA,KAAK,EAAE;AACpCO,MAAAA,qBAAqB,uBADe;AAEpCM,MAAAA,aAAa,eAFuB;AAGpCP,MAAAA,eAAe,iBAHqB;AAIpCE,MAAAA,aAAa,EAAEA,aAAa,IAAIG,cAJI;AAKpCM,MAAAA,IAAI,MALgC;AAMpCC,MAAAA,OAAO,SAN6B;AAOpCG,MAAAA,IAAI,MAPgC;AAQpCC,MAAAA,OAAO;AAR6B;AAAtC,KAUGjB,QAVH,CADF;AAcD;;IAEKkB,uBAAuB,GAAG,SAA1BA,uBAA0B;AAAqC,SACnEvB,cAAK,CAACwB,UAAN,CAAiBzB,oBAAjB,CADmE;AAEpE;;;;"}