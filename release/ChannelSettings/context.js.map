{"version":3,"file":"context.js","sources":["../../src/smart-components/ChannelSettings/context/ChannelSettingsProvider.tsx"],"sourcesContent":["\nimport React, {\n  useEffect,\n  useState,\n} from 'react';\nimport Sendbird from 'sendbird';\n\nimport useSendbirdStateContext from '../../../hooks/useSendbirdStateContext';\nimport { RenderUserProfileProps } from '../../../types';\nimport { UserProfileProvider } from '../../../lib/UserProfileContext';\nimport uuidv4 from '../../../utils/uuid';\n\ninterface ApplicationUserListQuery {\n  limit?: number;\n  userIdsFilter?: Array<string>;\n  metaDataKeyFilter?: string;\n  metaDataValuesFilter?: Array<string>;\n}\n\ninterface ChannelSettingsQueries {\n  applicationUserListQuery?: ApplicationUserListQuery;\n}\n\nexport type ChannelSettingsContextProps = {\n  children: React.ReactNode;\n  channelUrl: string;\n  className?: string;\n  onCloseClick?(): void;\n  onChannelModified?(channel: Sendbird.GroupChannel): void;\n  onBeforeUpdateChannel?(currentTitle: string, currentImg: File, data: string): Sendbird.GroupChannelParams;\n  queries?: ChannelSettingsQueries;\n  renderUserProfile?: (props: RenderUserProfileProps) => React.ReactNode;\n  disableUserProfile?: boolean;\n}\n\ninterface ChannelSettingsProviderInterface {\n  channelUrl: string;\n  onCloseClick?(): void;\n  onChannelModified?(channel: Sendbird.GroupChannel): void;\n  onBeforeUpdateChannel?(currentTitle: string, currentImg: File, data: string): Sendbird.GroupChannelParams;\n  queries?: ChannelSettingsQueries;\n  setChannelUpdateId(uniqId: string): void;\n  forceUpdateUI(): void;\n  channel: Sendbird.GroupChannel;\n  invalidChannel: boolean;\n}\n\nconst ChannelSettingsContext = React.createContext<ChannelSettingsProviderInterface|null>(undefined);\n\nconst ChannelSettingsProvider: React.FC<ChannelSettingsContextProps> = (props: ChannelSettingsContextProps) => {\n  const {\n    children,\n    className,\n    channelUrl,\n    onCloseClick,\n    onChannelModified,\n    onBeforeUpdateChannel,\n    queries,\n  } = props;\n\n  // fetch store from <SendbirdProvider />\n  const globalStore = useSendbirdStateContext();\n  const { config, stores } = globalStore;\n  const { sdkStore } = stores;\n  const { logger } = config;\n\n  const { sdk, initialized } = sdkStore;\n\n  // hack to keep track of channel updates by triggering useEffect\n  const [channelUpdateId, setChannelUpdateId] = useState(uuidv4());\n  const [channel, setChannel] = useState(null);\n  const [invalidChannel, setInvalidChannel] = useState(false);\n\n  const forceUpdateUI = () => {\n    setChannelUpdateId(uuidv4());\n  }\n\n  useEffect(() => {\n    logger.info('ChannelSettings: Setting up');\n    if (!channelUrl || !initialized || !sdk) {\n      logger.warning('ChannelSettings: Setting up failed', 'No channelUrl or sdk uninitialized');\n      setInvalidChannel(false);\n    } else {\n      if (!sdk || !sdk.GroupChannel) {\n        logger.warning('ChannelSettings: No GroupChannel');\n        return;\n      }\n      sdk.GroupChannel.getChannel(channelUrl, (groupChannel) => {\n        if (!groupChannel) {\n          logger.warning('ChannelSettings: Channel not found');\n          setInvalidChannel(true);\n        } else {\n          logger.info('ChannelSettings: Fetched group channel', groupChannel);\n          setInvalidChannel(false);\n          setChannel(groupChannel);\n        }\n      });\n    }\n  }, [channelUrl, initialized, channelUpdateId]);\n\n  return (\n    <ChannelSettingsContext.Provider value={{\n      channelUrl,\n      onCloseClick,\n      onChannelModified,\n      onBeforeUpdateChannel,\n      queries,\n      setChannelUpdateId,\n      forceUpdateUI,\n      channel,\n      invalidChannel,\n    }}>\n      <UserProfileProvider\n        renderUserProfile={props?.renderUserProfile}\n        disableUserProfile={props?.disableUserProfile}\n      >\n        <div className={`sendbird-channel-settings ${className}`}>\n          {children}\n        </div>\n      </UserProfileProvider>\n    </ChannelSettingsContext.Provider>\n  );\n}\n\nexport type UseChannelSettingsType = () => ChannelSettingsProviderInterface;\nconst useChannelSettings: UseChannelSettingsType = () => React.useContext(ChannelSettingsContext);\n\nexport { ChannelSettingsProvider, useChannelSettings };\n"],"names":["ChannelSettingsContext","React","createContext","undefined","ChannelSettingsProvider","props","children","className","channelUrl","onCloseClick","onChannelModified","onBeforeUpdateChannel","queries","globalStore","useSendbirdStateContext","config","stores","sdkStore","logger","sdk","initialized","_a","useState","uuidv4","channelUpdateId","setChannelUpdateId","_b","channel","setChannel","_c","invalidChannel","setInvalidChannel","forceUpdateUI","useEffect","info","warning","GroupChannel","getChannel","groupChannel","renderUserProfile","disableUserProfile","useChannelSettings","useContext"],"mappings":"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"}