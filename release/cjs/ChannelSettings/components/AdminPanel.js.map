{"version":3,"file":"AdminPanel.js","sources":["../../../../src/smart-components/ChannelSettings/components/AdminPanel/OperatorsModal.tsx","../../../../src/smart-components/ChannelSettings/components/AdminPanel/AddOperatorsModal.tsx","../../../../src/smart-components/ChannelSettings/components/AdminPanel/OperatorList.tsx","../../../../src/smart-components/ChannelSettings/components/AdminPanel/BannedMembersModal.tsx","../../../../src/smart-components/ChannelSettings/components/AdminPanel/BannedMemberList.tsx","../../../../src/smart-components/ChannelSettings/components/AdminPanel/MutedMembersModal.tsx","../../../../src/smart-components/ChannelSettings/components/AdminPanel/MutedMemberList.tsx","../../../../src/smart-components/ChannelSettings/components/AdminPanel/index.tsx"],"sourcesContent":["import React, {\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react'\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport { useChannelSettings } from '../../context/ChannelSettingsProvider';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\n\ninterface Props { onCancel?(): void }\n\nexport default function OperatorsModal({ onCancel }: Props): ReactElement {\n  const [operators, setOperators] = useState([]);\n  const [operatorQuery, setOperatorQuery] = useState(null);\n\n  const { channel } = useChannelSettings();\n  const state = useSendbirdStateContext();\n  const currentUser = state?.config?.userId;\n\n  useEffect(() => {\n    const operatorListQuery = channel.createOperatorListQuery();\n    operatorListQuery.limit = 20;\n    operatorListQuery.next((operators, error) => {\n      if (error) {\n        return;\n      }\n      setOperators(operators);\n    });\n    setOperatorQuery(operatorListQuery);\n  }, [])\n  return (\n    <div>\n      <Modal\n        hideFooter\n        titleText=\"All operators\"\n        onCancel={onCancel}\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = operatorQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              operatorQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setOperators([\n                  ...operators,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { operators.map((member) => (\n            <UserListItem\n              currentUser={currentUser}\n              user={member}\n              key={member.userId}\n              action={({ parentRef, actionRef }) => (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.removeOperators([member.userId], (response, error) => {\n                            if (error) {\n                              return;\n                            }\n                            setOperators(operators.filter(({ userId }) => {\n                              return userId !== member.userId;\n                            }));\n                          });\n                          closeDropdown();\n                        }}\n                      >\n                        Dismiss operator\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              )}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  )\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useContext,\n} from 'react';\n\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport Modal from '../../../../ui/Modal';\nimport Label, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport { Type as ButtonType } from '../../../../ui/Button/type';\nimport UserListItem from '../../../../ui/UserListItem';\nimport { useChannelSettings } from '../../context/ChannelSettingsProvider';\n\ninterface Props {\n  onCancel(): void;\n  onSubmit(members: Array<string>): void;\n}\n\nexport default function AddOperatorsModal({\n  onCancel,\n  onSubmit,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [selectedMembers, setSelectedMembers] = useState({});\n  const [memberQuery, setMemberQuery] = useState(null);\n  const { stringSet } = useContext(LocalizationContext);\n\n  const { channel } = useChannelSettings();\n\n  useEffect(() => {\n    const memberListQuery = channel.createMemberListQuery();\n    memberListQuery.limit = 20;\n    memberListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n    });\n    setMemberQuery(memberListQuery);\n  }, [])\n\n  const selectedCount = Object.keys(selectedMembers).filter((m) => selectedMembers[m]).length;\n  return (\n    <div>\n      <Modal\n        type={ButtonType.PRIMARY}\n        submitText=\"Add\"\n        onCancel={onCancel}\n        onSubmit={() => {\n          const members = Object.keys(selectedMembers).filter((m) => selectedMembers[m]);\n          channel?.addOperators(members).then(() => {\n            onSubmit(members);\n          })\n        }}\n        titleText=\"Select members\"\n      >\n        <Label\n          color={(selectedCount > 0) ? LabelColors.PRIMARY : LabelColors.ONBACKGROUND_3}\n          type={LabelTypography.CAPTION_1}\n        >\n          {`${selectedCount} ${stringSet.MODAL__INVITE_MEMBER__SELECTEC}`}\n        </Label>\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n            if (hasNext && fetchMore) {\n              memberQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setMembers([\n                  ...members,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              checkBox\n              checked={selectedMembers[member.userId]}\n              onChange={\n                (event) => {\n                  const modifiedSelectedMembers = {\n                    ...selectedMembers,\n                    [event.target.id]: event.target.checked,\n                  };\n                  if (!event.target.checked) {\n                    delete modifiedSelectedMembers[event.target.id];\n                  }\n                  setSelectedMembers(modifiedSelectedMembers);\n                }\n              }\n              user={member}\n              key={member.userId}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n  useContext,\n} from 'react';\n\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport UserListItem from '../UserListItem';\nimport OperatorsModal from './OperatorsModal';\nimport AddOperatorsModal from './AddOperatorsModal';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { useChannelSettings } from '../../context/ChannelSettingsProvider';\n\nexport const OperatorList = (): ReactElement => {\n  const [operators, setOperators] = useState([]);\n  const [showMore, setShowMore] = useState(false);\n  const [showAdd, setShowAdd] = useState(false);\n  const [hasNext, setHasNext] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n\n  const state = useSendbirdStateContext();\n  const { channel } = useChannelSettings();\n\n  const userId = state?.config?.userId;\n\n  useEffect(() => {\n    if (!channel) {\n      setOperators([]);\n      return;\n    }\n\n    const operatorListQuery = channel.createOperatorListQuery();\n    operatorListQuery.limit = 10;\n    operatorListQuery.next((operators, error) => {\n      if (error) {\n        return;\n      }\n      setOperators(operators);\n      setHasNext(operatorListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refershList = useCallback(\n    () => {\n      if (!channel) {\n        setOperators([]);\n        return;\n      }\n      const operatorListQuery = channel.createOperatorListQuery();\n      operatorListQuery.limit = 10;\n      operatorListQuery.next((operators, error) => {\n        if (error) {\n          return;\n        }\n        setOperators(operators);\n        setHasNext(operatorListQuery.hasNext);\n      });\n    },\n    [channel],\n  );\n\n  return (\n    <>\n      {\n        operators.map((operator) => (\n          <UserListItem\n            key={operator.userId}\n            user={operator}\n            currentUser={userId}\n            action={({ actionRef, parentRef }) => {\n              return (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.removeOperators([operator.userId], (response, error) => {\n                            if (error) {\n                              return;\n                            }\n                            setOperators(operators.filter(({ userId }) => {\n                              return userId !== operator.userId;\n                            }))\n                          });\n                          closeDropdown();\n                        }}\n                      >\n                        Dismiss operator\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              );\n            }}\n          />\n        ))\n      }\n      <div\n        className=\"sendbird-channel-settings-accordion__footer\"\n      >\n        <Button\n          type={ButtonTypes.SECONDARY}\n          size={ButtonSizes.SMALL}\n          onClick={() => {\n            setShowAdd(true);\n          }}\n        >\n          {stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ADD}\n        </Button>\n        {\n          hasNext && (\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowMore(true);\n              }}\n            >\n              {stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ALL}\n            </Button>\n          )\n        }\n      </div>\n      {\n        showMore && (\n          <OperatorsModal onCancel={() => {\n            setShowMore(false);\n            refershList();\n          }} />\n        )\n      }\n      {\n        showAdd && (\n          <AddOperatorsModal\n            onCancel={() => setShowAdd(false)}\n            onSubmit={() => {\n              refershList();\n              setShowAdd(false);\n            }}\n          />\n        )\n      }\n    </>\n  );\n}\n\nexport default OperatorList;\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport { noop } from '../../../../utils/utils';\nimport { useChannelSettings } from '../../context/ChannelSettingsProvider';\n\ninterface Props {\n  onCancel(): void;\n}\n\nexport default function BannedMembersModal({\n  onCancel,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [memberQuery, setMemberQuery] = useState(null);\n  const { channel } = useChannelSettings();\n\n  useEffect(() => {\n    const bannedUserListQuery = channel.createBannedUserListQuery();\n    bannedUserListQuery.next((users, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(users);\n    });\n    setMemberQuery(bannedUserListQuery);\n  }, []);\n  return (\n    <div>\n      <Modal\n        hideFooter\n        onCancel={() => onCancel()}\n        onSubmit={noop}\n        titleText=\"Muted members\"\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setMembers([\n                  ...members,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              user={member}\n              key={member.userId}\n              action={({ parentRef, actionRef }) => (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.unbanUser(member, () => {\n                            closeDropdown();\n                            setMembers(members.filter(m => {\n                              return (m.userId !== member.userId);\n                            }));\n                          })\n                        }}\n                      >\n                        Unban\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              )\n              }\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n} from 'react';\n\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport\n  Label, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport UserListItem from '../UserListItem';\nimport BannedMembersModal from './BannedMembersModal';\nimport { useChannelSettings } from '../../context/ChannelSettingsProvider';\n\nexport const BannedMemberList = (): ReactElement => {\n  const [members, setMembers] = useState([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  const { channel } = useChannelSettings();\n\n  useEffect(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const bannedUserListQuery = channel.createBannedUserListQuery();\n    bannedUserListQuery.next((users, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(users);\n      setHasNext(bannedUserListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refreshList = useCallback(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const bannedUserListQuery = channel.createBannedUserListQuery();\n    bannedUserListQuery.next(function(users, error) {\n      if (error) {\n        return;\n      }\n      setMembers(users);\n      setHasNext(bannedUserListQuery.hasNext);\n    });\n  }, [channel]);\n  return (\n    <>\n      {\n        members.map((member) => (\n          <UserListItem\n            key={member.userId}\n            user={member}\n            action={({ actionRef, parentRef }) => {\n              return (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.unbanUser(member, () => {\n                            closeDropdown();\n                            refreshList();\n                          })\n                        }}\n                      >\n                        Unban\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              )\n            }}\n          />\n        ))\n      }\n      {\n        members && members.length === 0 && (\n          <Label\n            className=\"sendbird-channel-settings__empty-list\"\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_3}\n          >\n            No banned members yet\n          </Label>\n        )\n      }\n      {\n        hasNext && (\n          <div\n            className=\"sendbird-channel-settings-accordion__footer\"\n          >\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowModal(true);\n              }}\n            >\n              All banned members\n            </Button>\n          </div>\n        )\n      }\n      {\n        showModal && (\n          <BannedMembersModal\n            onCancel={() => {\n              setShowModal(false);\n              refreshList();\n            }}\n          />\n        )\n      }\n    </>\n  );\n}\n\n\nexport default BannedMemberList;\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport { noop } from '../../../../utils/utils';\nimport { useChannelSettings } from '../../context/ChannelSettingsProvider';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\n\ninterface Props {\n  onCancel(): void;\n}\n\nexport default function MutedMembersModal({\n  onCancel,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [memberQuery, setMemberQuery] = useState(null);\n\n  const { channel } = useChannelSettings();\n  const state = useSendbirdStateContext();\n  const currentUser = state?.config?.userId;\n\n  useEffect(() => {\n    const memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.mutedMemberFilter = 'muted';\n    memberUserListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n    });\n    setMemberQuery(memberUserListQuery);\n  }, []);\n  return (\n    <div>\n      <Modal\n        hideFooter\n        onCancel={() => onCancel()}\n        onSubmit={noop}\n        titleText=\"Muted members\"\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setMembers([\n                  ...members,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              currentUser={currentUser}\n              user={member}\n              key={member.userId}\n              action={({ actionRef, parentRef }) => (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.unmuteUser(member, () => {\n                            closeDropdown();\n                            setMembers(members.filter(m => {\n                              return (m.userId !== member.userId);\n                            }));\n                          })\n                        }}\n                      >\n                        Unmute\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              )}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n} from 'react';\n\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport\n  Label, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport UserListItem from '../UserListItem';\nimport MutedMembersModal from './MutedMembersModal';\nimport { useChannelSettings } from '../../context/ChannelSettingsProvider';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\n\n\nexport const MutedMemberList = (): ReactElement => {\n  const [members, setMembers] = useState([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  const { channel } = useChannelSettings();\n  const state = useSendbirdStateContext();\n  const currentUser = state?.config?.userId;\n\n  useEffect(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.mutedMemberFilter = 'muted';\n    memberUserListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refreshList = useCallback(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.mutedMemberFilter = 'muted';\n    memberUserListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n  return (\n    <>\n      {\n        members.map((member) => (\n          <UserListItem\n            key={member.userId}\n            user={member}\n            currentUser={currentUser}\n            action={({ actionRef, parentRef }) => {\n              return (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.unmuteUser(member, () => {\n                            refreshList();\n                            closeDropdown();\n                          })\n                        }}\n                      >\n                        Unmute\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              );\n            }\n            }\n          />\n        ))\n      }\n      {\n        members && members.length === 0 && (\n          <Label\n            className=\"sendbird-channel-settings__empty-list\"\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_3}\n          >\n            No muted members yet\n          </Label>\n        )\n      }\n      {\n        hasNext && (\n          <div\n            className=\"sendbird-channel-settings-accordion__footer\"\n          >\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowModal(true);\n              }}\n            >\n              All muted members\n            </Button>\n          </div>\n        )\n      }\n      {\n        showModal && (\n          <MutedMembersModal\n            onCancel={() => {\n              setShowModal(false);\n              refreshList();\n            }}\n          />\n        )\n      }\n    </>\n  );\n}\n\nexport default MutedMemberList;\n","import './admin-panel.scss';\nimport React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useContext,\n} from 'react';\n\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport Accordion, { AccordionGroup } from '../../../../ui/Accordion';\nimport\n  Label, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport Badge from '../../../../ui/Badge';\n\nimport OperatorList from './OperatorList';\nimport MemberList from './MemberList';\nimport BannedMemberList from './BannedMemberList';\nimport MutedMemberList from './MutedMemberList';\n\nimport { useChannelSettings } from '../../context/ChannelSettingsProvider';\n\nconst kFormatter = (num: number): string|number => {\n  return Math.abs(num) > 999\n    ? `${(Math.abs(num)/1000).toFixed(1)}K`\n    : num;\n}\n\nexport default function AdminPannel(): ReactElement {\n  const [frozen, setFrozen] = useState(false);\n\n  const { stringSet } = useContext(LocalizationContext);\n  const { channel } = useChannelSettings();\n\n\n  // work around for\n  // https://sendbird.slack.com/archives/G01290GCDCN/p1595922832000900\n  // SDK bug - after frozen/unfrozen myRole becomes \"none\"\n  useEffect(() => {\n    setFrozen(channel.isFrozen);\n  }, [channel]);\n\n  return (\n    <AccordionGroup className=\"sendbird-channel-settings__operator\">\n      <Accordion\n        className=\"sendbird-channel-settings__operators-list\"\n        id=\"operators\"\n        renderTitle={() => (\n          <>\n            <Icon\n              type={IconTypes.OPERATOR}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__OPERATORS__TITLE}\n            </Label>\n          </>\n        )}\n        renderContent={() => (\n          <>\n            <OperatorList />\n          </>\n        )}\n      />\n      <Accordion\n        className=\"sendbird-channel-settings__members-list\"\n        id=\"members\"\n        renderTitle={() => (\n          <>\n            <Icon\n              type={IconTypes.MEMBERS}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__MEMBERS__TITLE}\n            </Label>\n            <Badge count={kFormatter(channel.memberCount)} />\n          </>\n        )}\n        renderContent={() => (\n          <>\n            <MemberList />\n          </>\n        )}\n      />\n      {\n        // No muted members in broadcast channel\n        !channel.isBroadcast && (\n          <Accordion\n            id=\"mutedMembers\"\n            className=\"sendbird-channel-settings__muted-members-list\"\n            renderTitle={() => (\n              <>\n                <Icon\n                  type={IconTypes.MUTE}\n                  fillColor={IconColors.PRIMARY}\n                  width={24}\n                  height={24}\n                  className=\"sendbird-channel-settings__accordion-icon\"\n                />\n                <Label\n                  type={LabelTypography.SUBTITLE_1}\n                  color={LabelColors.ONBACKGROUND_1}\n                >\n                  {stringSet.CHANNEL_SETTING__MUTED_MEMBERS__TITLE}\n                </Label>\n              </>\n            )}\n            renderContent={() => (\n              <>\n                <MutedMemberList />\n              </>\n            )}\n          />\n        )\n      }\n      <Accordion\n        className=\"sendbird-channel-settings__banned-members-list\"\n        id=\"bannedMembers\"\n        renderTitle={() => (\n          <>\n            <Icon\n              type={IconTypes.BAN}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__BANNED_MEMBERS__TITLE}\n            </Label>\n          </>\n        )}\n        renderContent={() => (\n          <>\n            <BannedMemberList />\n          </>\n        )}\n      />\n      {\n        // cannot freeze broadcast channel\n        !channel.isBroadcast && (\n          <div className=\"sendbird-channel-settings__freeze\">\n            <Icon\n              type={IconTypes.FREEZE}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__FREEZE_CHANNEL}\n            </Label>\n            <div className=\"sendbird-channel-settings__frozen-icon\">\n              {\n                frozen\n                  ? (\n                    <Icon\n                      onClick={() => {\n                        channel.unfreeze(() => {\n                          setFrozen(false);\n                        });\n                      }}\n                      type={IconTypes.TOGGLE_ON}\n                      fillColor={IconColors.PRIMARY}\n                      width={44}\n                      height={24}\n                    />\n                  )\n                  : (\n                    <Icon\n                      onClick={() => {\n                        channel.freeze(() => {\n                          setFrozen(true);\n                        });\n                      }}\n                      type={IconTypes.TOGGLE_OFF}\n                      fillColor={IconColors.PRIMARY}\n                      width={44}\n                      height={24}\n                    />\n                  )\n              }\n            </div>\n          </div>\n        )\n      }\n    </AccordionGroup>\n  );\n}\n"],"names":["OperatorsModal","_a","onCancel","_c","useState","operators","setOperators","_d","operatorQuery","setOperatorQuery","channel","useChannelSettings","state","useSendbirdStateContext","currentUser","config","userId","useEffect","operatorListQuery","createOperatorListQuery","limit","next","error","React","Modal","e","hasNext","target","fetchMore","clientHeight","scrollTop","scrollHeight","o","map","member","UserListItem","parentRef","actionRef","ContextMenu","toggleDropdown","IconButton","Icon","IconTypes","MORE","IconColors","CONTENT_INVERSE","closeDropdown","MenuItems","MenuItem","removeOperators","response","filter","AddOperatorsModal","onSubmit","_b","members","setMembers","selectedMembers","setSelectedMembers","memberQuery","setMemberQuery","stringSet","useContext","LocalizationContext","memberListQuery","createMemberListQuery","selectedCount","Object","keys","m","length","ButtonType","PRIMARY","addOperators","then","Label","LabelColors","ONBACKGROUND_3","LabelTypography","CAPTION_1","MODAL__INVITE_MEMBER__SELECTEC","event","modifiedSelectedMembers","id","checked","OperatorList","showMore","setShowMore","showAdd","setShowAdd","_e","setHasNext","refershList","useCallback","operator","Button","ButtonTypes","SECONDARY","ButtonSizes","SMALL","CHANNEL_SETTING__OPERATORS__TITLE_ADD","CHANNEL_SETTING__OPERATORS__TITLE_ALL","BannedMembersModal","bannedUserListQuery","createBannedUserListQuery","users","noop","unbanUser","BannedMemberList","showModal","setShowModal","refreshList","SUBTITLE_2","MutedMembersModal","memberUserListQuery","mutedMemberFilter","unmuteUser","MutedMemberList","kFormatter","num","Math","abs","toFixed","AdminPannel","frozen","setFrozen","isFrozen","AccordionGroup","Accordion","OPERATOR","SUBTITLE_1","ONBACKGROUND_1","CHANNEL_SETTING__OPERATORS__TITLE","MEMBERS","CHANNEL_SETTING__MEMBERS__TITLE","Badge","memberCount","MemberList","isBroadcast","MUTE","CHANNEL_SETTING__MUTED_MEMBERS__TITLE","BAN","CHANNEL_SETTING__BANNED_MEMBERS__TITLE","FREEZE","CHANNEL_SETTING__FREEZE_CHANNEL","unfreeze","TOGGLE_ON","freeze","TOGGLE_OFF"],"mappings":"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"}