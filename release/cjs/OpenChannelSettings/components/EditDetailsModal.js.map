{"version":3,"file":"EditDetailsModal.js","sources":["../../../../src/smart-components/OpenChannelSettings/components/EditDetailsModal.tsx"],"sourcesContent":["import React, {\n  useState,\n  useRef,\n  useContext,\n  ReactElement,\n} from 'react';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Modal from '../../../ui/Modal';\nimport Input, { InputLabel } from '../../../ui/Input';\nimport Avatar from '../../../ui/Avatar/index';\nimport { Type as ButtonType } from '../../../ui/Button/type';\nimport Label, { LabelColors, LabelTypography } from '../../../ui/Label';\nimport TextButton from '../../../ui/TextButton';\nimport OpenChannelAvatar from '../../../ui/ChannelAvatar/OpenChannelAvatar';\nimport { useOpenChannelSettings } from '../context/OpenChannelSettingsProvider';\nimport useSendbirdStateContext from '../../../hooks/useSendbirdStateContext';\n\ninterface Props {\n  onCancel(): void;\n}\n\nconst EditDetails = (props: Props): ReactElement => {\n  const {\n    onCancel,\n  } = props;\n  const globalState = useSendbirdStateContext();\n  const logger = globalState?.config?.logger;\n  const theme = globalState?.config?.theme;\n  const {\n    channel,\n    onBeforeUpdateChannel,\n    onChannelModified,\n    setChannel,\n  } = useOpenChannelSettings();\n\n  const inputRef = useRef(null);\n  const formRef = useRef(null);\n  const hiddenInputRef = useRef(null);\n  const [currentImg, setCurrentImg] = useState(null);\n  const [newFile, setNewFile] = useState(null);\n  const { stringSet } = useContext(LocalizationContext);\n  const title = channel?.name;\n  return (\n    <Modal\n      titleText={stringSet.MODAL__CHANNEL_INFORMATION__TITLE}\n      submitText={stringSet.BUTTON__SAVE}\n      onCancel={onCancel}\n      onSubmit={() => {\n        if (title !== '' && !inputRef.current.value) {\n          if (formRef.current.reportValidity) { // might not work in explorer\n            formRef.current.reportValidity();\n          }\n          return;\n        }\n        const currentTitle = inputRef.current.value;\n        const currentImg = newFile;\n        logger.info('ChannelSettings: Channel information being updated');\n        if (onBeforeUpdateChannel) {\n          const params = onBeforeUpdateChannel(currentTitle, currentImg, channel?.data);\n          logger.info('ChannelSettings: onBeforeUpdateChannel', params);\n          channel?.updateChannel(params, (openChannel) => {\n            onChannelModified(openChannel);\n            // setChannel(openChannel) => alone not working\n            setChannel(null);\n            setChannel(openChannel);\n          });\n        } else {\n          channel?.updateChannel(\n            currentTitle,\n            currentImg,\n            channel?.data,\n            (openChannel) => {\n              logger.info('ChannelSettings: Channel information updated', openChannel);\n              onChannelModified(openChannel);\n              // setChannel(openChannel) => alone not working\n              setChannel(null);\n              setChannel(openChannel);\n            },\n          );\n        }\n        onCancel();\n      }}\n      type={ButtonType.PRIMARY}\n    >\n      <form\n        className=\"channel-profile-form\"\n        ref={formRef}\n        onSubmit={(e) => { e.preventDefault(); }}\n      >\n        <div className=\"channel-profile-form__img-section\">\n          <InputLabel>\n            {stringSet.MODAL__CHANNEL_INFORMATION__CHANNEL_IMAGE}\n          </InputLabel>\n          <div className=\"channel-profile-form__avatar\">\n            {\n              currentImg\n                ? (\n                  <Avatar\n                    height=\"80px\"\n                    width=\"80px\"\n                    src={currentImg}\n                  />\n                ) : (\n                  <OpenChannelAvatar\n                    height={80}\n                    width={80}\n                    channel={channel}\n                    theme={theme}\n                  />\n                )\n              }\n          </div>\n          <input\n            ref={hiddenInputRef}\n            type=\"file\"\n            accept=\"image/gif, image/jpeg, image/png\"\n            style={{ display: 'none' }}\n            onChange={(e) => {\n              setCurrentImg(URL.createObjectURL(e.target.files[0]));\n              setNewFile(e.target.files[0]);\n              hiddenInputRef.current.value = '';\n            }}\n          />\n          <TextButton\n            className=\"channel-profile-form__avatar-button\"\n            onClick={() => hiddenInputRef.current.click()}\n            notUnderline\n          >\n            <Label type={LabelTypography.BUTTON_1} color={LabelColors.PRIMARY}>\n              {stringSet.MODAL__CHANNEL_INFORMATION__UPLOAD}\n            </Label>\n          </TextButton>\n        </div>\n        <div className=\"channel-profile-form__name-section\">\n          <InputLabel>\n            {stringSet.MODAL__CHANNEL_INFORMATION__CHANNEL_NAME}\n          </InputLabel>\n          <Input\n            required={title !== ''}\n            name=\"channel-profile-form__name\"\n            ref={inputRef}\n            value={title}\n            placeHolder={stringSet.MODAL__CHANNEL_INFORMATION__INPUT__PLACE_HOLDER}\n          />\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nexport default EditDetails;\n"],"names":["EditDetails","props","onCancel","globalState","useSendbirdStateContext","logger","config","theme","_c","useOpenChannelSettings","channel","onBeforeUpdateChannel","onChannelModified","setChannel","inputRef","useRef","formRef","hiddenInputRef","_d","useState","currentImg","setCurrentImg","_e","newFile","setNewFile","stringSet","useContext","LocalizationContext","title","name","React","Modal","MODAL__CHANNEL_INFORMATION__TITLE","BUTTON__SAVE","current","value","reportValidity","currentTitle","info","params","data","updateChannel","openChannel","ButtonType","PRIMARY","e","preventDefault","InputLabel","MODAL__CHANNEL_INFORMATION__CHANNEL_IMAGE","Avatar","OpenChannelAvatar","display","URL","createObjectURL","target","files","TextButton","click","Label","LabelTypography","BUTTON_1","LabelColors","MODAL__CHANNEL_INFORMATION__UPLOAD","MODAL__CHANNEL_INFORMATION__CHANNEL_NAME","Input","MODAL__CHANNEL_INFORMATION__INPUT__PLACE_HOLDER"],"mappings":"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"}