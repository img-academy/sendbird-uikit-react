{"version":3,"file":"ChannelListUI.js","sources":["../../../../src/smart-components/ChannelList/components/ChannelListUI/index.tsx"],"sourcesContent":["import './channel-list-ui.scss';\n\nimport React, { useState } from 'react';\n\nimport SendBird from 'sendbird';\n\nimport ChannelListHeader from '../ChannelListHeader';\nimport AddChannel from '../AddChannel';\nimport ChannelPreview from '../ChannelPreview';\nimport ChannelPreviewAction from '../ChannelPreviewAction';\nimport { useChannelListContext } from '../../context/ChannelListProvider';\nimport * as channelListActions from '../../dux/actionTypes';\n\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport EditUserProfile from '../../../EditUserProfile';\nimport PlaceHolder, { PlaceHolderTypes } from '../../../../ui/PlaceHolder';\n\nconst DELIVERY_RECIPT = 'delivery_receipt';\n\ninterface RenderChannelPreviewProps {\n  channel: SendBird.GroupChannel;\n  onLeaveChannel(\n    channel: SendBird.GroupChannel,\n    onLeaveChannelCb?: (c: SendBird.GroupChannel) => void,\n  );\n}\n\ninterface RenderUserProfileProps {\n  user: SendBird.Member | SendBird.User;\n  currentUserId: string;\n  close(): void;\n}\n\nexport interface ChannelListUIProps {\n  renderChannelPreview?: (props: RenderChannelPreviewProps) => React.ReactNode;\n  renderUserProfile?: (props: RenderUserProfileProps) => React.ReactNode;\n  renderHeader?: (props: void) => React.ReactNode;\n  renderPlaceHolderError?: (props: void) => React.ReactNode;\n  renderPlaceHolderLoading?: (props: void) => React.ReactNode;\n  renderPlaceHolderEmptyList?: (props: void) => React.ReactNode;\n}\n\nconst ChannelListUI: React.FC<ChannelListUIProps> = (props: ChannelListUIProps) => {\n  const {\n    renderHeader,\n    renderChannelPreview,\n    renderPlaceHolderError,\n    renderPlaceHolderLoading,\n    renderPlaceHolderEmptyList,\n  } = props;\n\n  const [showProfileEdit, setShowProfileEdit] = useState(false);\n\n  const {\n    onThemeChange,\n    allowProfileEdit,\n    allChannels,\n    loading,\n    currentChannel,\n    channelListDispatcher,\n    channelSource,\n    typingChannels,\n  } = useChannelListContext();\n\n  const state = useSendbirdStateContext();\n\n  const sdkStore = state?.stores?.sdkStore;\n  const config = state?.config;\n\n  const isOnline = state?.config?.isOnline;\n  const logger = config?.logger;\n\n  const sdk = sdkStore?.sdk;\n  const sdkError = sdkStore?.error;\n  const sdkIntialized = sdkStore?.initialized || false;\n\n  return (\n    <>\n      <div className=\"sendbird-channel-list__header\">\n        <ChannelListHeader\n          renderHeader={renderHeader}\n          onEdit={() => {\n            if (allowProfileEdit) {\n              setShowProfileEdit(true);\n            }\n          }}\n          allowProfileEdit={allowProfileEdit}\n          renderIconButton={() => (\n            <AddChannel />\n          )}\n        />\n      </div>\n      {\n        showProfileEdit && (\n          <EditUserProfile\n            onThemeChange={onThemeChange}\n            onCancel={() => { setShowProfileEdit(false); }}\n            onEditProfile={() => {\n              setShowProfileEdit(false);\n            }}\n          />\n        )\n      }\n      <div\n        className=\"sendbird-channel-list__body\"\n        onScroll={(e) => {\n          const target = e?.target as HTMLDivElement;\n          const fetchMore = target.clientHeight + target.scrollTop === target.scrollHeight;\n          if (fetchMore && channelSource?.hasNext) {\n            logger.info('ChannelList: Fetching more channels');\n            channelListDispatcher({\n              type: channelListActions.FETCH_CHANNELS_START,\n              payload: null,\n            });\n            channelSource?.next((channelList, err) => {\n              if (err) {\n                logger.info('ChannelList: Fetching channels failed', err);\n                channelListDispatcher({\n                  type: channelListActions.FETCH_CHANNELS_FAILURE,\n                  payload: channelList,\n                });\n                return;\n              }\n              logger.info('ChannelList: Fetching channels successful', channelList);\n              channelListDispatcher({\n                type: channelListActions.FETCH_CHANNELS_SUCCESS,\n                payload: channelList,\n              });\n              const canSetMarkAsDelivered = sdk?.appInfo?.premiumFeatureList\n                ?.find((feature) => (feature === DELIVERY_RECIPT));\n\n              if (canSetMarkAsDelivered) {\n                logger.info('ChannelList: Marking all channels as read');\n                // eslint-disable-next-line no-unused-expressions\n                channelList?.forEach((c, idx) => {\n                  // Plan-based rate limits - minimum limit is 5 requests per second\n                  setTimeout(() => {\n                    sdk?.markAsDelivered(c?.url);\n                  }, 300 * idx);\n                });\n              }\n            });\n          }\n        }}\n      >\n        {\n          (sdkError) && (\n            (renderPlaceHolderError && typeof renderPlaceHolderError === 'function') ? (\n              renderPlaceHolderError?.()\n            ): (\n              <PlaceHolder type={PlaceHolderTypes.WRONG} />\n            )\n          )\n        }\n        {/*\n          To do: Implement windowing\n          Implement windowing if you are dealing with large number of messages/channels\n          https://github.com/bvaughn/react-window -> recommendation\n          We hesitate to bring one more dependency to our library,\n          we are planning to implement it inside the library\n        */}\n        <div>\n          {\n            allChannels && allChannels.map((channel, idx) => {\n              const onLeaveChannel = (c, cb) => {\n                logger.info('ChannelList: Leaving channel', c);\n                c.leave()\n                  .then((res) => {\n                    logger.info('ChannelList: Leaving channel success', res);\n                    if (cb && typeof cb === 'function') {\n                      cb(res, null);\n                    }\n                    channelListDispatcher({\n                      type: channelListActions.LEAVE_CHANNEL_SUCCESS,\n                      payload: channel.url,\n                    });\n                  })\n                  .catch((err) => {\n                    logger.error('ChannelList: Leaving channel failed', err);\n                    if (cb && typeof cb === 'function') {\n                      cb(null, err);\n                    }\n                  });\n              };\n\n              const onClick = () => {\n                if (!isOnline) { return; }\n                logger.info('ChannelList: Clicked on channel:', channel);\n                channelListDispatcher({\n                  type: channelListActions.SET_CURRENT_CHANNEL,\n                  payload: channel,\n                });\n              };\n\n              return (\n                (renderChannelPreview)\n                  ? (\n                    // eslint-disable-next-line\n                    <div key={channel.url} onClick={onClick}>\n                      {renderChannelPreview({ channel, onLeaveChannel })}\n                    </div>\n                  )\n                  : (\n                    <ChannelPreview\n                      key={channel.url}\n                      tabIndex={idx}\n                      onClick={onClick}\n                      channel={channel}\n                      isActive={channel.url === currentChannel?.url}\n                      isTyping={typingChannels?.some(({ url }) => url === channel.url)}\n                      renderChannelAction={(() => (\n                        <ChannelPreviewAction\n                          disabled={!isOnline}\n                          onLeaveChannel={() => onLeaveChannel(channel, null)}\n                        />\n                      ))}\n                    />\n                  )\n              );\n            })\n          }\n        </div>\n        {\n          (!sdkIntialized || loading) && (\n            (renderPlaceHolderLoading && typeof renderPlaceHolderLoading === 'function') ? (\n              renderPlaceHolderLoading?.()\n            ): (\n              <PlaceHolder type={PlaceHolderTypes.LOADING} />\n            )\n          )\n        }\n        {\n          (!allChannels || allChannels.length === 0) && (\n            (renderPlaceHolderEmptyList && typeof renderPlaceHolderEmptyList === 'function') ? (\n              renderPlaceHolderEmptyList?.()\n            ): (\n              <PlaceHolder type={PlaceHolderTypes.NO_CHANNELS} />\n            )\n          )\n        }\n      </div>\n    </>\n  );\n}\n\nexport default ChannelListUI;\n"],"names":["DELIVERY_RECIPT","ChannelListUI","props","renderHeader","renderChannelPreview","renderPlaceHolderError","renderPlaceHolderLoading","renderPlaceHolderEmptyList","_c","useState","showProfileEdit","setShowProfileEdit","_d","useChannelListContext","onThemeChange","allowProfileEdit","allChannels","loading","currentChannel","channelListDispatcher","channelSource","typingChannels","state","useSendbirdStateContext","sdkStore","stores","config","isOnline","logger","sdk","sdkError","error","sdkIntialized","initialized","React","ChannelListHeader","AddChannel","e","target","fetchMore","clientHeight","scrollTop","scrollHeight","hasNext","info","type","channelListActions","payload","next","channelList","err","canSetMarkAsDelivered","appInfo","premiumFeatureList","find","feature","forEach","c","idx","setTimeout","markAsDelivered","url","PlaceHolder","PlaceHolderTypes","WRONG","map","channel","onLeaveChannel","cb","leave","then","res","catch","onClick","ChannelPreview","some","_a","ChannelPreviewAction","LOADING","length","NO_CHANNELS"],"mappings":"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"}