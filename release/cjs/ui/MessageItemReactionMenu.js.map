{"version":3,"file":"MessageItemReactionMenu.js","sources":["../../../src/ui/MessageItemReactionMenu/index.tsx"],"sourcesContent":["import React, { ReactElement, useRef } from 'react';\nimport { FileMessage, UserMessage, Emoji, Reaction, EmojiContainer } from 'sendbird';\nimport './index.scss';\n\nimport ContextMenu, { EmojiListItems } from '../ContextMenu';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport ImageRenderer from '../ImageRenderer';\nimport ReactionButton from '../ReactionButton';\nimport { getClassName, getEmojiListAll, isPendingMessage, isFailedMessage } from '../../utils';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: UserMessage | FileMessage;\n  userId: string;\n  spaceFromTrigger?: Record<string, unknown>;\n  emojiContainer?: EmojiContainer;\n  toggleReaction?: (message: UserMessage | FileMessage, reactionKey: string, isReacted: boolean) => void;\n  setSupposedHover?: (bool: boolean) => void;\n}\n\nexport default function MessageItemReactionMenu({\n  className,\n  message,\n  userId,\n  spaceFromTrigger = {},\n  emojiContainer,\n  toggleReaction,\n  setSupposedHover,\n}: Props): ReactElement {\n  const triggerRef = useRef(null);\n  const containerRef = useRef(null);\n\n  if(isPendingMessage(message) || isFailedMessage(message)) {\n    return null;\n  }\n\n  return (\n    <div\n      className={getClassName([className, 'sendbird-message-item-reaction-menu'])}\n      ref={containerRef}\n    >\n      <ContextMenu\n        menuTrigger={(toggleDropdown: () => void): ReactElement => (\n          <IconButton\n            className=\"sendbird-message-item-reaction-menu__trigger\"\n            ref={triggerRef}\n            width=\"32px\"\n            height=\"32px\"\n            onClick={(): void => {\n              toggleDropdown();\n              setSupposedHover(true);\n            }}\n            onBlur={(): void => {\n              setSupposedHover(false);\n            }}\n          >\n            <Icon\n              className=\"sendbird-message-item-reaction-menu__trigger__icon\"\n              type={IconTypes.EMOJI_MORE}\n              fillColor={IconColors.CONTENT_INVERSE}\n              width=\"24px\"\n              height=\"24px\"\n            />\n          </IconButton>\n        )}\n        menuItems={(close: () => void): ReactElement => {\n          const closeDropdown = (): void => {\n            close();\n            setSupposedHover(false);\n          };\n          return (\n            <EmojiListItems\n              parentRef={triggerRef}\n              parentContainRef={containerRef}\n              closeDropdown={closeDropdown}\n              spaceFromTrigger={spaceFromTrigger}\n            >\n              {getEmojiListAll(emojiContainer).map((emoji: Emoji): ReactElement => {\n                const isReacted: boolean = message?.reactions?.\n                  filter((reaction: Reaction) => reaction.key === emoji.key)[0]?.userIds?.\n                  some((reactorId: string) => reactorId === userId);\n                return (\n                  <ReactionButton\n                    key={emoji.key}\n                    width=\"36px\"\n                    height=\"36px\"\n                    selected={isReacted}\n                    onClick={() => {\n                      closeDropdown();\n                      toggleReaction(message, emoji.key, isReacted);\n                    }}\n                  >\n                    <ImageRenderer\n                      url={emoji.url}\n                      width=\"28px\"\n                      height=\"28px\"\n                      placeHolder={(style) => (\n                        <div style={style}>\n                          <Icon\n                            type={IconTypes.QUESTION}\n                            fillColor={IconColors.ON_BACKGROUND_3}\n                            width=\"28px\"\n                            height=\"28px\"\n                          />\n                        </div>\n                      )}\n                    />\n                  </ReactionButton>\n                );\n              })}\n            </EmojiListItems>\n          );\n        }}\n      />\n    </div>\n  );\n}\n"],"names":["MessageItemReactionMenu","_a","className","message","userId","_b","spaceFromTrigger","emojiContainer","toggleReaction","setSupposedHover","triggerRef","useRef","containerRef","isPendingMessage","isFailedMessage","React","getClassName","ContextMenu","toggleDropdown","IconButton","Icon","IconTypes","EMOJI_MORE","IconColors","CONTENT_INVERSE","close","closeDropdown","EmojiListItems","getEmojiListAll","map","emoji","isReacted","reactions","filter","reaction","key","userIds","some","reactorId","ReactionButton","ImageRenderer","url","style","QUESTION","ON_BACKGROUND_3"],"mappings":"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"}