{"version":3,"file":"OpenchannelUserMessage.js","sources":["../../../src/ui/OpenchannelUserMessage/index.tsx"],"sourcesContent":["import React, {\n  useMemo,\n  useContext,\n  useRef,\n  useState,\n  ReactElement,\n  useEffect,\n} from 'react';\nimport format from 'date-fns/format';\nimport './index.scss';\n\nimport Avatar from '../Avatar';\nimport ContextMenu, { MenuItems, MenuItem } from '../ContextMenu';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport Loader from '../Loader';\nimport UserProfile from '../UserProfile';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\n\nimport { useLocalization } from '../../lib/LocalizationContext';\nimport { copyToClipboard } from './utils';\nimport uuidv4 from '../../utils/uuid';\nimport { ClientUserMessage } from '../../index';\nimport {\n  checkIsByMe,\n  checkIsPending,\n  checkIsFailed,\n  isFineCopy,\n  isFineEdit,\n  isFineResend,\n  isFineDelete,\n  showMenuTrigger,\n} from '../../utils/openChannelUtils';\nimport { getSenderFromMessage } from '../../utils/openChannelUtils';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: ClientUserMessage;\n  userId: string;\n  disabled?: boolean;\n  showEdit(bool: boolean): void;\n  showRemove(bool: boolean): void;\n  resendMessage(message: ClientUserMessage): void;\n  chainTop?: boolean;\n  chainBottom?: boolean;\n}\n\nexport default function OpenchannelUserMessage({\n  className,\n  message,\n  userId,\n  resendMessage,\n  disabled,\n  showEdit,\n  showRemove,\n  chainTop,\n}: Props): ReactElement {\n  if (!message || message.messageType !== 'user') {\n    return null;\n  }\n\n  // hooks\n  const { stringSet, dateLocale } = useLocalization();\n  const { disableUserProfile, renderUserProfile } = useContext(UserProfileContext);\n  const messageRef = useRef(null);\n  const avatarRef = useRef(null);\n  const contextMenuRef = useRef(null);\n  const [contextStyle, setContextStyle] = useState({});\n\n  // consts\n  const status = message?.sendingStatus;\n  const isByMe = checkIsByMe(message, userId);\n  const isPending = checkIsPending(status);\n  const isFailed = checkIsFailed(status);\n  const sender = getSenderFromMessage(message);\n\n  const MemoizedMessageText = useMemo(() => () => {\n    const splitMessage = message.message.split(/\\r/);\n    const matchedMessage = splitMessage.map((word) => (word !== '' ? word : <br />));\n    if (message.updatedAt > 0) {\n      matchedMessage.push(\n        <Label\n          key={uuidv4()}\n          type={LabelTypography.BODY_1}\n          color={LabelColors.ONBACKGROUND_2}\n          calssName=\"sendbird-openchannel-user-message-word\"\n        >\n          {` ${stringSet.MESSAGE_EDITED} `}\n        </Label>,\n      );\n    }\n    return matchedMessage;\n  }, [message, message.updatedAt]);\n\n  // place context menu top depending clientHeight of message component\n  useEffect(() => {\n    if (messageRef?.current?.clientHeight > 36) {\n      setContextStyle({ top: '8px ' });\n    } else {\n      setContextStyle({ top: '2px' });\n    }\n  }, [window.innerWidth]);\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-openchannel-user-message',\n      ].join(' ')}\n      ref={messageRef}\n    >\n      <div className=\"sendbird-openchannel-user-message__left\">\n        {\n          !chainTop && (\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <Avatar\n                  className=\"sendbird-openchannel-user-message__left__avatar\"\n                  src={sender.profileUrl || ''}\n                  ref={avatarRef}\n                  width=\"28px\"\n                  height=\"28px\"\n                  onClick={() => {\n                    if (!disableUserProfile) {\n                      toggleDropdown();\n                    }\n                  }}\n                />\n              )}\n              menuItems={(closeDropdown) => (\n                <MenuItems\n                  parentRef={avatarRef}\n                  parentContainRef={avatarRef}\n                  closeDropdown={closeDropdown}\n                  style={{ paddingTop: 0, paddingBottom: 0 }}\n                >\n                  {\n                    renderUserProfile\n                    ? (\n                      renderUserProfile({\n                        user: sender,\n                        close: closeDropdown,\n                      })\n                    )\n                    : (\n                      <UserProfile\n                        user={sender}\n                        onSuccess={closeDropdown}\n                        disableMessaging\n                      />\n                    )\n                  }\n                </MenuItems>\n              )}\n            />\n          )\n        }\n      </div>\n      <div className=\"sendbird-openchannel-user-message__right\">\n        {\n          !chainTop && (\n            <div className=\"sendbird-openchannel-user-message__right__top\">\n              <Label\n                className=\"sendbird-openchannel-user-message__right__top__sender-name\"\n                type={LabelTypography.CAPTION_2}\n                color={isByMe ? LabelColors.SECONDARY_3 : LabelColors.ONBACKGROUND_2}\n              >\n                {\n                  sender && (\n                    sender.friendName\n                    || sender.nickname\n                    || sender.userId\n                  )\n                }\n              </Label>\n              <Label\n                className=\"sendbird-openchannel-user-message__right__top__sent-at\"\n                type={LabelTypography.CAPTION_3}\n                color={LabelColors.ONBACKGROUND_3}\n              >\n                {\n                  message?.createdAt && (\n                    format(message?.createdAt, 'p', {\n                      locale: dateLocale,\n                    })\n                  )\n                }\n              </Label>\n            </div>\n          )\n        }\n        <div className=\"sendbird-openchannel-user-message__right__bottom\">\n          <Label\n            className=\"sendbird-openchannel-user-message__right__bottom__message\"\n            type={LabelTypography.BODY_1}\n            color={LabelColors.ONBACKGROUND_1}\n          >\n            {MemoizedMessageText()}\n          </Label>\n        </div>\n        {\n          (isPending || isFailed) && (\n            <div className=\"sendbird-openchannel-user-message__right__tail\">\n              {\n                isPending && (\n                  <Loader\n                    width=\"16px\"\n                    height=\"16px\"\n                  >\n                    <Icon\n                      className=\"sendbird-openchannel-user-message__right__tail__pending\"\n                      type={IconTypes.SPINNER}\n                      fillColor={IconColors.PRIMARY}\n                      width=\"16px\"\n                      height=\"16px\"\n                    />\n                  </Loader>\n                )\n              }\n              {\n                isFailed && (\n                  <Icon\n                    className=\"sendbird-openchannel-user-message__right__tail__failed\"\n                    type={IconTypes.ERROR}\n                    fillColor={IconColors.ERROR}\n                    width=\"16px\"\n                    height=\"16px\"\n                  />\n                )\n              }\n            </div>\n          )\n        }\n      </div>\n      {\n        <div\n          className=\"sendbird-openchannel-user-message__context-menu\"\n          ref={contextMenuRef}\n          style={contextStyle}\n        >\n          <ContextMenu\n            menuTrigger={(toggleDropdown) => (\n              showMenuTrigger({ message: message, userId: userId, status: status}) && (\n                <IconButton\n                  className=\"sendbird-openchannel-user-message__context-menu--icon\"\n                  width=\"32px\"\n                  height=\"32px\"\n                  onClick={() => {\n                    toggleDropdown();\n                  }}\n                >\n                  <Icon\n                    type={IconTypes.MORE}\n                    fillColor={IconColors.CONTENT_INVERSE}\n                    width=\"24px\"\n                    height=\"24px\"\n                  />\n                </IconButton>\n              )\n            )}\n            menuItems={(closeDropdown) => (\n              <MenuItems\n                parentRef={contextMenuRef}\n                parentContainRef={contextMenuRef}\n                closeDropdown={closeDropdown}\n                openLeft\n              >\n                {\n                  isFineCopy({ message: message, userId: userId, status: status }) && (\n                    <MenuItem\n                      className=\"sendbird-openchannel-user-message__context-menu__copy\"\n                      onClick={() => {\n                        copyToClipboard(message.message);\n                        closeDropdown();\n                      }}\n                    >\n                      {stringSet.CONTEXT_MENU_DROPDOWN__COPY}\n                    </MenuItem>\n                  )\n                }\n                {\n                  isFineEdit({ message: message, userId: userId, status: status }) && (\n                    <MenuItem\n                      className=\"sendbird-openchannel-user-message__context-menu__edit\"\n                      onClick={() => {\n                        if (disabled) {\n                          return;\n                        }\n                        showEdit(true);\n                        closeDropdown();\n                      }}\n                    >\n                      {stringSet.CONTEXT_MENU_DROPDOWN__EDIT}\n                    </MenuItem>\n                  )\n                }\n                {\n                  isFineResend({ message: message, userId: userId, status: status }) && (\n                    <MenuItem\n                      className=\"sendbird-openchannel-user-message__context-menu__resend\"\n                      onClick={() => {\n                        resendMessage(message);\n                        closeDropdown();\n                      }}\n                    >\n                      {stringSet.CONTEXT_MENU_DROPDOWN__RESEND}\n                    </MenuItem>\n                  )\n                }\n                {\n                  isFineDelete({ message: message, userId: userId, status: status }) && (\n                    <MenuItem\n                      className=\"sendbird-openchannel-user-message__context-menu__delete\"\n                      onClick={() => {\n                        if (disabled) {\n                          return;\n                        }\n                        showRemove(true);\n                        closeDropdown();\n                      }}\n                    >\n                      {stringSet.CONTEXT_MENU_DROPDOWN__DELETE}\n                    </MenuItem>\n                  )\n                }\n              </MenuItems>\n            )}\n          />\n        </div>\n      }\n    </div>\n  );\n}\n"],"names":["OpenchannelUserMessage","_a","className","message","userId","resendMessage","disabled","showEdit","showRemove","chainTop","messageType","_b","useLocalization","stringSet","dateLocale","_c","useContext","UserProfileContext","disableUserProfile","renderUserProfile","messageRef","useRef","avatarRef","contextMenuRef","_d","useState","contextStyle","setContextStyle","status","sendingStatus","isByMe","checkIsByMe","isPending","checkIsPending","isFailed","checkIsFailed","sender","getSenderFromMessage","MemoizedMessageText","useMemo","splitMessage","split","matchedMessage","map","word","React","updatedAt","push","Label","uuidv4","LabelTypography","BODY_1","LabelColors","ONBACKGROUND_2","MESSAGE_EDITED","useEffect","current","clientHeight","top","window","innerWidth","__spreadArray","Array","isArray","join","ContextMenu","toggleDropdown","Avatar","profileUrl","closeDropdown","MenuItems","paddingTop","paddingBottom","user","close","UserProfile","CAPTION_2","SECONDARY_3","friendName","nickname","CAPTION_3","ONBACKGROUND_3","createdAt","format","locale","ONBACKGROUND_1","Loader","Icon","IconTypes","SPINNER","IconColors","PRIMARY","ERROR","showMenuTrigger","IconButton","MORE","CONTENT_INVERSE","isFineCopy","MenuItem","copyToClipboard","CONTEXT_MENU_DROPDOWN__COPY","isFineEdit","CONTEXT_MENU_DROPDOWN__EDIT","isFineResend","CONTEXT_MENU_DROPDOWN__RESEND","isFineDelete","CONTEXT_MENU_DROPDOWN__DELETE"],"mappings":"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"}