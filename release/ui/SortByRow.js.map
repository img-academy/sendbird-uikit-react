{"version":3,"file":"SortByRow.js","sources":["../../src/ui/SortByRow/index.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nconst componentClassName = 'sendbird-sort-by-row';\nexport default function SortByRow({\n  className,\n  maxItemCount,\n  itemWidth,\n  itemHeight,\n  children,\n}) {\n  if (children.length > maxItemCount) {\n    const result = [];\n\n    for (let i = 0; i < children.length; i += maxItemCount) {\n      result.push(\n        <div\n          className={[\n            ...(Array.isArray(className) ? className : [className]),\n            componentClassName,\n          ].join(' ')}\n          key={className + i}\n          style={{\n            width: itemWidth * maxItemCount,\n            height: itemHeight,\n          }}\n        >\n          {\n            children.slice(i, i + maxItemCount)\n          }\n        </div>,\n      );\n    }\n    return result;\n  }\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        componentClassName,\n      ].join(' ')}\n      style={{\n        width: itemWidth * children.length,\n        height: itemHeight,\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n\nSortByRow.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  maxItemCount: PropTypes.number.isRequired,\n  itemWidth: PropTypes.number.isRequired,\n  itemHeight: PropTypes.number.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.arrayOf(PropTypes.element),\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]).isRequired,\n};\n\nSortByRow.defaultProps = {\n  className: '',\n};\n"],"names":["componentClassName","SortByRow","className","maxItemCount","itemWidth","itemHeight","children","length","result","i","push","React","Array","isArray","join","width","height","slice","propTypes","PropTypes","oneOfType","string","arrayOf","number","isRequired","element","defaultProps"],"mappings":";;;;AAKA,IAAMA,kBAAkB,GAAG,sBAA3B;AACe,SAASC,SAAT,OAMZ;AAAA,MALDC,SAKC,QALDA,SAKC;AAAA,MAJDC,YAIC,QAJDA,YAIC;AAAA,MAHDC,SAGC,QAHDA,SAGC;AAAA,MAFDC,UAEC,QAFDA,UAEC;AAAA,MADDC,QACC,QADDA,QACC;;AACD,MAAIA,QAAQ,CAACC,MAAT,GAAkBJ,YAAtB,EAAoC;AAClC,QAAMK,MAAM,GAAG,EAAf;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACC,MAA7B,EAAqCE,CAAC,IAAIN,YAA1C,EAAwD;AACtDK,MAAAA,MAAM,CAACE,IAAP,eACEC;AACE,QAAA,SAAS,EAAE,6BACLC,KAAK,CAACC,OAAN,CAAcX,SAAd,IAA2BA,SAA3B,GAAuC,CAACA,SAAD,CADlC,IAETF,kBAFS,GAGTc,IAHS,CAGJ,GAHI,CADb;AAKE,QAAA,GAAG,EAAEZ,SAAS,GAAGO,CALnB;AAME,QAAA,KAAK,EAAE;AACLM,UAAAA,KAAK,EAAEX,SAAS,GAAGD,YADd;AAELa,UAAAA,MAAM,EAAEX;AAFH;AANT,SAYIC,QAAQ,CAACW,KAAT,CAAeR,CAAf,EAAkBA,CAAC,GAAGN,YAAtB,CAZJ,CADF;AAiBD;;AACD,WAAOK,MAAP;AACD;;AAED,sBACEG;AACE,IAAA,SAAS,EAAE,6BACLC,KAAK,CAACC,OAAN,CAAcX,SAAd,IAA2BA,SAA3B,GAAuC,CAACA,SAAD,CADlC,IAETF,kBAFS,GAGTc,IAHS,CAGJ,GAHI,CADb;AAKE,IAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAEX,SAAS,GAAGE,QAAQ,CAACC,MADvB;AAELS,MAAAA,MAAM,EAAEX;AAFH;AALT,KAUGC,QAVH,CADF;AAcD;AAEDL,SAAS,CAACiB,SAAV,GAAsB;AACpBhB,EAAAA,SAAS,EAAEiB,SAAS,CAACC,SAAV,CAAoB,CAC7BD,SAAS,CAACE,MADmB,EAE7BF,SAAS,CAACG,OAAV,CAAkBH,SAAS,CAACE,MAA5B,CAF6B,CAApB,CADS;AAKpBlB,EAAAA,YAAY,EAAEgB,SAAS,CAACI,MAAV,CAAiBC,UALX;AAMpBpB,EAAAA,SAAS,EAAEe,SAAS,CAACI,MAAV,CAAiBC,UANR;AAOpBnB,EAAAA,UAAU,EAAEc,SAAS,CAACI,MAAV,CAAiBC,UAPT;AAQpBlB,EAAAA,QAAQ,EAAEa,SAAS,CAACC,SAAV,CAAoB,CAC5BD,SAAS,CAACM,OADkB,EAE5BN,SAAS,CAACG,OAAV,CAAkBH,SAAS,CAACM,OAA5B,CAF4B,EAG5BN,SAAS,CAACE,MAHkB,EAI5BF,SAAS,CAACG,OAAV,CAAkBH,SAAS,CAACE,MAA5B,CAJ4B,CAApB,EAKPG;AAbiB,CAAtB;AAgBAvB,SAAS,CAACyB,YAAV,GAAyB;AACvBxB,EAAAA,SAAS,EAAE;AADY,CAAzB;;;;"}